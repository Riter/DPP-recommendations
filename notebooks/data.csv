team_id,case_title,case_description,user_fio,person_skills,case_required_skills
81,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Додин Даниил Дмитриевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
81,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Хижний Никита Александрович,"Data Science, Computer Vision, Data Engineering, DevOps, Docker, Git, Machine Learning, Matplotlib, NumPy, Pandas, PyTorch, Управление проектами, OpenCV, Linux, Jupyter, Python, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
81,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Папуашвили Георгий Давидович,"AirFlow, Computer Vision, Data Engineering, Data Science, Deep Learning, Docker, Git, Jupyter, Machine Learning, Matplotlib, Linux, NumPy, Pandas, PyTorch, OpenCV, SQL, Scikit-Learn, Seaborn, Python, Математическая статистика, TensorFlow, СУБД PostgreSQL, Разработка моделей данных, Управление проектами, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
81,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Коробов Максим Евгеньевич,"Computer Vision, Git, Go, Jupyter, Machine Learning, OpenCV, Seaborn, Scikit-Learn, PyTorch, Pandas, NumPy, Matplotlib, Python, SQL, СУБД PostgreSQL, Математическая статистика, Docker, Data Science, HTML, Deep Learning, Разработка моделей данных, Управление проектами, Data Engineering","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
81,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Назербаев Руслан Бахтиярович,"Back-end разработка, CSS, Django, Git, HTML, Linux, Python, SQL, СУБД PostgreSQL, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
81,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Черных Никита Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
81,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Сорокин Никита Иванович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
81,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Семенцов Олег Викторович,"Data Science, Git, Jupyter, Matplotlib, NumPy, Pandas, Python, SQL, Seaborn, Математическая статистика, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Шершнев Иван Русланович,"CSS, Git, Docker, HTML, Linux, Matplotlib, Pandas, Python, Back-end разработка, Математическая статистика, NumPy","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Заславцев Максим Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Губарев Михаил Сергеевич,"Back-end разработка, Git, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Куркин Вадим Юрьевич,"Git, NumPy, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Дербенева Вероника Дмитриевна,"CSS, HTML, Figma, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Степанов Никита Иванович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Назаров Владимир Игоревич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Батов Кирилл Сергеевич,"Canva, Linux, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Гусаров Михаил Иванович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Сиротина Софья Вадимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
18,Оптимальное распределение задач на основе психологического профиля и графика активности жильцов комнаты,"Результат проекта: Чат-бот, способный распределять задачи для жильцов комнаты/блока на основе их **психологического** портрета и их расписания.

Создание простого и эффективного чат-бота для распределения обязанностей жильцов одного/одной блока/комнаты",Федорков Александр Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Шерстобитов Арсений Вадимович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Плоскова Мария Сергеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Русаловская Оксана Руслановна,"Figma, Kotlin, Python, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Грачева Александра Алексеевна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Сергеев Владислав Антонович,"CSS, Back-end разработка, Git, Docker, Figma, Python, HTML, SQL, Умение работать с API, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Алексеев Алексей Дмитриевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Толстюк Максим Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Елисеев Арсений Олегович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Жуков Кирилл Сергеевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
73,БАМ,Определение контура железной дороги БАМ на спутниковых снимках с использованием нейронной сети.,Кузнецов Александр Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Жаворонков Михаил Николаевич,"Back-end разработка, HTML, Python, Matplotlib, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Салихов Тимур Русланович,"Back-end разработка, Docker, Git, Jupyter, Linux, Построение Rest API, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Головенко Анатолий Валерьевич,"Jupyter, Machine Learning, NumPy, Python, Pandas, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Кайдалова Александра Андреевна,"CSS, Python, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Куценко Максим Дмитриевич,"Linux, Pandas, Python, Git, Управление проектами, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Басова Татьяна Валентиновна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Епифанов Евгений Валерьевич,"Figma, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Драновский Иван Дмитриевич,"Git, Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Юрков Евгений Юрьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
17,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Эсмедляев Федор Романович,"HTML, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Чуканов Николай Валерьевич,"Docker, Django, NumPy, Matplotlib, Machine Learning, Jupyter, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Митякин-Тен Никита Андреевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Маношин Виталий Дмитриевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Лупанова Анна Сергеевна,"Canva, Figma, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Вертоградский Дмитрий Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Кострюков Евгений Сергеевич,"Linux, Git, Python, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Пискун Артём Максимович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Полиха Александр Владимирович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Ивкин Егор Васильевич,"Jupyter, NumPy, Python, Pandas","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
114,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Казарцев Денис Вячеславович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Хасболатов Азамат Камилевич,"Jupyter, NumPy, Matplotlib, Pandas, Python, Управление проектами","['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Урусов Александр Владимирович,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Шанин Никита Сергеевич,Управление проектами,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Усанова Татьяна Александровна,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Матасов Никита Александрович,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Ямолкин Дмитрий Викторович,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Христофоров Лев Романович,"Математическая статистика, Разработка моделей данных","['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Анкудинова Полина Денисовна,"HTML, Python, Управление проектами","['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Галиев Роберт Фаритович,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
26,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Кононова Юлия Романовна,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Волков Алексей Дмитриевич,"Back-end разработка, CSS, Git, HTML, Python, SQL, Linux, Django, Pandas","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Седов Максим Дмитриевич,"Git, Python, NumPy, Pandas, Jupyter, Linux, Seaborn, Scikit-Learn","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Досегаева Полина Алексеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Сектименко Ирина Владимировна,"Canva, Git, NumPy, Pandas, Python, Linux, Figma, Jupyter, SQL, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Каримов Арсений Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Даутов Тимур Бауржанович,"Back-end разработка, Docker, Git, Linux, Python, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Боглаев Алексей Александрович,"Back-end разработка, Django, Docker, Git, Linux, Matplotlib, NumPy, OpenCV, Python, СУБД PostgreSQL, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Абдисаламов Элмар,"Back-end разработка, Docker, Git, Go, Kafka, Linux, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Медведев Вадим Дмитриевич,"Figma, Git, Linux, Python, AirFlow","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
105,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Жаднов Михаил Денисович,"CSS, Figma, Git, HTML, Linux, Matplotlib, NumPy, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Скороходов Александр Валерьевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Сурков Александр Алексеевич,"Linux, Управление проектами, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Медведев Владислав Дмитриевич,"Git, Python, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Гасанов Турал Русланович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Королев Иван Иванович,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Ежов Илья Владимирович,"Git, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Калиничев Никита Игоревич,"Back-end разработка, Git, HTML, Matplotlib, Python, SQL, Умение работать с API, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Хахина Полина Михайловна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
62,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Рогачев Владислав Николаевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Белов Александр Степанович,"Data Science, DevOps, Git","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Уткин Кирилл Сергеевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Невзорова Елизавета Александровна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Кобзева Ирина Алексеевна,"Back-end разработка, DevOps, Docker, Figma, Git, Kafka, Kubernetes, Linux, Математическая статистика, Построение Rest API, Умение работать с API, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Александров Виктор Сергеевич,"Data Science, Git, SQL, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Федосеев Вячеслав Александрович,"Git, Python, Pandas, NumPy, Machine Learning, Matplotlib, Data Engineering, TensorFlow, Back-end разработка, Jupyter, Deep Learning","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Иванов Егор Константинович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Комков Артем Денисович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Большаков Максим Андреевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
89,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Деревянченко Кирилл Александрович,"Git, SQL, Python","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Тищенко Никита Максимович,"Back-end разработка, NumPy, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Хайретдинова Рената Рушановна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Гаранин Илья Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Ермолаева Алена Денисовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Погорелов Антон Игоревич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Княжев Никита Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Богатченко Даниил Борисович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Левченко Ксения Ивановна,"Canva, Figma, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Мелешкина Ксения Юрьевна,"Canva, Computer Vision, Figma, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
8,Классификация патологий в офтальмологии методом машинного обучения,"Результатом работы предполагается система анализа и выявления глаукомы по изображениям глазного дна, позволяющая снизить временные затраты на обследование и вероятность врачебной ошибки.

Опционально планируется добавить текстовую интерпретацию изображений и глазного дна и увеличить количество выявляемых патологий.

*Предполагаемая целевая аудитория:* 

- [ ] Врачи-офтальмологи, работающие в государственных и частных медицинских учреждениях, которые могут использовать результаты анализа для диагностики и лечения пациентов. 
- [ ] Медицинские исследовательские центры и институты, занимающиеся изучением и разработкой новых методов лечения заболеваний глазного дна. 
- [ ] Фармацевтические компании, производящие препараты для лечения заболеваний глаз, которые могут использовать полученные данные для разработки новых лекарств и улучшения существующих.",Гилязова Рената Фаритовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Зонина Полина Александровна,"Jupyter, HTML, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Круглов Максим Юрьевич,Git,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Таскина Ангелина Павловна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Болохов Максим Олегович,"Back-end разработка, Git, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Маркин Савелий Андреевич,"Jupyter, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Агафонова Екатерина Андреевна,"Canva, Computer Vision, HTML, Linux, Pandas, Python, Умение работать с API, Управление проектами, Seaborn","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Поцепай Владимир Николаевич,"CSS, Git, HTML, Keras, Matplotlib, NumPy, OpenCV, Python, SQL, React, Jupyter, Figma","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Лукашов Дмитрий Олегович,Java,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Харитонов Артем Сергеевич,Back-end разработка,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
15,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Пропастина Юлия Александровна,"Back-end разработка, CSS, Django, Git, HTML, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Тарабукин Марк Иванович,"Back-end разработка, Data Science, Go, Git, Linux, Python, SQL, СУБД PostgreSQL, Умение работать с API, Построение Rest API, DevOps","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Домрачев Дмитрий Никитович,"SQL, Jupyter, Kotlin, Figma, Git, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Тужилкин Роман Александрович,"Python, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Говорушкин Максим Владимирович,"HTML, Figma, CSS","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Антонов Николай Александрович,"Linux, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Ульянова Виктория Валерьевна,Linux,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Джаднаева Аделина Бадмаевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Михайлов Даниил Александрович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
139,Задача по моделированию движения роботов погрузчиков,"Разработать модуль управления складскими роботами (например на базе движка Uniti).
Складские вилочные погрузчики перемещаются по складу по заданной карте (по нарисованным дорогам). В системе есть информация о том, какой робот из какой точки в какую должен переместить тот или иной груз, а также есть местоположение всех роботов в каждый момент времени. 


*Необходимо разработать модуль на базе искусственного интеллекта, который будет:*

1. определять, каким маршрутом робот должен идти в точку 
2. ""говорить"" каждому роботу, в какую промежуточную точку ему необходимо перемещаться для того, чтобы достичь заданной цели 
3. определять, кто, где, кого пропускает (+ давать роботам команду на ожидание)
4. не допускать блокировки роботами друг друга
5. с учетом возникающих проблем\ситуации переопределять маршруты и указания для роботов

Целью данного модуля является подбор оптимальной стратегии, которая позволит самым быстрым образом добраться всем роботам до конечных точек.


Конечным результатом будет являться написанный модуль на языке GO или NodeJS, в рамках которого будут передаваться задания для движения роботов. Выходом является маршрутизация.
",Суворов Евгений Вячеславович,"Go, Python, SQL, Back-end разработка","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Go', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Ксензова Юлия Александровна,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Александров Владимир Александрович,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Попов Алексей Игоревич,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Завалишин Егор Георгиевич,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Антонов Данила Владимирович,Умение работать с API,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Сизиков Кирилл Витальевич,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Рыжков Никита Максимович,Python,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Продон Сергей Дмитриевич,Python,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Конев Дмитрий Всеволодович,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
96,Разработка программного обеспечения для проектирования тяжелого бпла аэродинамической схемы «утка»,"цель - автоматизировать проектирование в первом приближении ЛА по аэродинамической схеме утка и силовой схеме тяни-толкай
 
задачи:
1. Разработка блок-схемы проекта
2. Разработка блок-схем расчетных частей проекта
3. Разработка блок-схем графических частей
4. Запись каждой блок-схемы в виде строк кода
5. Формирование полноценного ПО",Зайцев Михаил Романович,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Милешина Екатерина Александровна,"SQL, Математическая статистика, СУБД PostgreSQL, Управление проектами, Canva, Figma","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Мартиросян Анастасия Суреновна,"СУБД PostgreSQL, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Королев Максим Андреевич,"Back-end разработка, Docker, React, Умение работать с API, Построение Rest API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Завьялова Елизавета Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Мигурский Иван Феликсович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Тихомиров Павел Андреевич,"HTML, CSS, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Плахотников Артем Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Прохоров Кирилл Артемович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Хусаинов Александр Рустэмович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
103,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Сажина Дарья Дмитриевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Гаврилова Дарья Максимовна,"Canva, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Ажаурова Александра Константиновна,"Canva, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Макеев Алексей Михайлович,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Захаров Ян Олегович,"CSS, Figma, HTML, Python, React, SQL, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Забабурин Владислав Игоревич,"CSS, Figma, HTML, Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Гуликов Константин Андреевич,"Keras, Matplotlib, NumPy, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Попов Сергей Евгеньевич,"Git, NumPy, Matplotlib, Pandas, Python, Seaborn, Scikit-Learn, Jupyter, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Ширяев Никита Алексеевич,"Linux, NumPy, Matplotlib, Python, Pandas, Jupyter, Data Science, Git, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Марьян Александр Олегович,Linux,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Яблонская Надежда Витальевна,"Back-end разработка, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Кандыбин Максим Витальевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
136,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Курихин Максим Викторович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Буров Андрей Дмитриевич,Управление проектами,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Иванов Вячеслав Романович,"Математическая статистика, Управление проектами","['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Кадыков Никита Юрьевич,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Шестериков Егор Дмитриевич,Python,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Романов Николай Сергеевич,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Каплин Алексей Андреевич,"Python, Matplotlib","['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Богданов Алексей Андреевич,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Перфильева Василиса Сергеевна,Разработка моделей данных,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
125,Валидация панельных и вихревых методов для расчетов аэродинамических профилей и крыльев ЛА,"**Суть задачи:** оценить применимость панельных методов для прогнозирования аэродинамических интегральных сил при расчетах аэродинамических профилей (2D) и крыльев ЛА (3D).

**Задание:**

1.	Провести обзор имеющихся методов расчетов (панельные методы, вихревые методики, методы полного потенциала и т.д.) и имеющихся расчетных средств
2.	Валидировать расчетные средства путем сравнения результатов расчетов упрощенными методами и методом CFD (Ansys Fluent или аналоги)
3.	Произвести валидацию XFoil для расчетов характеристик аэродинамических профилей (2D) разных классов (симметричные, несимметричные, суперкритические - по указанию руководителя практики)
4.	Произвести валидацию XFLR5, AVL, OpenVogel для расчетов аэродинамических характеристик крыльев (3D)
",Жигунов Максим Игоревич,Управление проектами,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Андреев Павел Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Видякина Елизавета Анатольевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Шаранов Александр Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Латышева Анастасия Андреевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Рудой Александр Васильевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Шаланов Илья Владиславович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Хараськин Даниил Анатольевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Федорович Николай Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Федоров Михаил Андреевич,"Python, Matplotlib","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
144,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Пилюгин Михаил Валерьевич,"Back-end разработка, Docker, Linux, Jupyter, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Файзуллин Артур Расилевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Ли Владислав Станиславович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Смолянова Диана Сергеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Бекренев Григорий Михайлович,"Canva, Python, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Иванов Алексей Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Кхатри Виктория Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Якупов Магомедрасул Исрапилович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Аминев Артур Азатович,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Архирий Валерия Петровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Симаков Дмитрий Андреевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Забалуев Игорь Станиславович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
146,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Степанов Андрей Владимирович,"Python, Разработка моделей данных","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Новиков Михаил Дмитриевич,"Python, Умение работать с API, Управление проектами, Jupyter","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Емельянов Кирилл Александрович,"Jupyter, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Щукина Екатерина Игоревна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Литвинова Евгения Юрьевна,"Управление проектами, Jupyter","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Малеев Кирилл Григорьевич,"HTML, Figma, CSS, Python, Управление проектами, Linux","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Шейгородская Виктория Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Омельченко Анна Андреевна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Полосинова Анастасия Юрьевна,"Jupyter, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
137,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Логвин Алексей Сергеевич,"PyTorch, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Жук Денис Владимирович,"Figma, HTML, React, Python, CSS, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Мартенюк Никита Евгеньевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Астаркин Артём Романович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Гунин Филипп Алексеевич,"Data Science, Docker, Git, HTML, Jupyter, Linux, Matplotlib, NumPy, Pandas, Python, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Бейльман Георгий Альфредович,"NumPy, Pandas, Matplotlib, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Ермаков Данила Павлович,"Computer Vision, Figma, Matplotlib, NumPy, OpenCV, Python, Математическая статистика, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Синицына Анастасия Сергеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Зуев Никита Алексеевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Калиничев Артём Александрович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
9,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Бакаушин Александр Сергеевич,"Python, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Арушанян Эдуард Каренович,"HTML, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Лалаян Анна Вадимовна,"Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Ивинский Илья Артемович,"CSS, Figma, Git, HTML, Python, React","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Анисимов Серафим Алексеевич,"Python, SQL, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Поздышева Мария Андреевна,"CSS, Figma, Git, HTML, Linux, SQL, Математическая статистика, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Парфенов Михаил Максимович,"CSS, Docker, Django, Git, HTML, Figma, Linux, СУБД PostgreSQL, Python, React","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Прокофьев Андрей Романович,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Меркулова Елизавета Алексеевна,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Петренко Дмитрий Владимирович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
128,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Шатов Денис Сергеевич,"Figma, Git, CSS, HTML, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
117,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Антонов Михаил Романович,"Canva, Git, HTML, Linux, Python, SQL, Математическая статистика, СУБД PostgreSQL, Управление проектами, Figma","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
117,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Чеботарев Иван Алексеевич,"Linux, Математическая статистика","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
117,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Сидоркин Семён Сергеевич,"CSS, Canva, Figma, Git, HTML, Python, React, Умение работать с API","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
117,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Веденяпин Никита Петрович,"Git, HTML, Умение работать с API, SQL","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
117,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Ражев Ильнур Маратович,"CSS, Canva, Data Science, Data Engineering, Django, Git, HTML, Linux, Matplotlib, NumPy, Pandas, Python, SQL, Умение работать с API, Управление проектами, СУБД PostgreSQL, Разработка моделей данных, Figma, Back-end разработка","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
117,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Ковыршин Александр Дмитриевич,"Python, Математическая статистика, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
117,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Коробенков Сергей Алексеевич,"Canva, Figma","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
117,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Рудаков Антон Сергеевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
104,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Кузнецов Максим Сергеевич,"Python, NumPy, Jupyter","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
104,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Слесаренко Сергей Олегович,Machine Learning,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
104,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Марковцева Антонина Павловна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
104,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Грицай Николай Валерьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
104,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Ильин Андрей Иванович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
104,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Андреев Павел Геннадьевич,"CSS, HTML, Git, Figma, Python, SQL, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
104,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Лукьянов Максим Сергеевич,"Canva, Jupyter, Matplotlib, NumPy, SQL, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
104,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Булычев Михаил Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Жбанов Илья Алексеевич,"AirFlow, Computer Vision, Data Engineering, Deep Learning, Data Science, Docker, Git, Jupyter, Keras, Kubernetes, Linux, Machine Learning, Matplotlib, NumPy, ONNX Runtime, OpenCV, Pandas, PyTorch, Python, SQL, Scikit-Learn, Seaborn, TensorFlow, Математическая статистика, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Дудовцев Андрей Андреевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Аглиуллин Самат Рустамович,"Kotlin, Matplotlib, NumPy, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Васильева Александра Сергеевна,"Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Гудынин Данила Денисович,"AirFlow, Back-end разработка, Computer Vision, Deep Learning, DevOps, ETL, Jupyter, Go, Git, Docker, Figma, Data Engineering, Machine Learning, Matplotlib, Kubernetes, Linux, Kafka, OpenCV, ONNX Runtime, NumPy, Pandas, PyTorch, Python, SQL, Scikit-Learn, Seaborn, Построение Rest API, Умение работать с API, СУБД PostgreSQL, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Калюжный Михаил Сергеевич,"Git, Python, HTML, CSS","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Ягунов Родион Викторович,"Математическая статистика, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Полятыкин Никита Владимирович,"NumPy, Python, Seaborn, Pandas","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Чёрный Дмитрий Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Чернов Константин Николаевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Скабеева Екатерина,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Михайлова Софья Сергеевна,"Figma, CSS","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
135,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Кудрявов Леонид Вадимович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Моор Александр Егорович,"Canva, Математическая статистика, Python, HTML, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Рябов Илья Игоревич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Гусаров Матвей Александрович,"Linux, Python, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Кондрашов Даниил Сергеевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Масленников Иван Михайлович,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Кондоров Владислав Юрьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Слободянюк Савелий Никитич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Александрова Марина Андреевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Бабаев Павел Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
34,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Жумабаев Рамил Абдисалимович,Математическая статистика,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Лукашук Александр Евгеньевич,Python,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Файфор Вячеслав Станиславович,Python,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Толочко Альберт Андреевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Голощапов Павел Дмитриевич,"Python, СУБД PostgreSQL","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Соловьёв Илья Валерьевич,"Python, Pandas, NumPy, TensorFlow, Математическая статистика, Computer Vision, Data Engineering, Deep Learning","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Спесивый Евгений Алексеевич,"Математическая статистика, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Зимихин Евгений Дмитриевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Микасев Иван Александрович,Python,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
69,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Волков Ростислав Павлович,Математическая статистика,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Ольцман Артём Александрович,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Тимофеева Эвелина Андреевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Логинова Дарья Геннадиевна,"Математическая статистика, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Заруднева Маргарита Максимовна,"SQL, СУБД PostgreSQL, NumPy, Pandas","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Волохов Иван Вячеславович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Фетисова Анастасия Ильинична,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Крылов Пётр Дмитриевич,"Computer Vision, Machine Learning, NumPy, Pandas, OpenCV, PyTorch, Python, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Погорельская София Олеговна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",корендюхин фёдор андреевич,"Математическая статистика, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
22,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Филиппов Георгий Сергеевич,"Python, Seaborn, Scikit-Learn, PyTorch, SQL, СУБД PostgreSQL, OpenCV, Pandas, NumPy, Matplotlib, Jupyter, Data Science, Deep Learning, Разработка моделей данных","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Рыбина Анастасия Сергеевна,"Python, Математическая статистика, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Железнова Алена Александровна,"AirFlow, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Абрамов Данил Романович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Подгорный Дмитрий Александрович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Кокорин Михаил Иванович,"HTML, Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Ходаковский Александр Петрович,"Python, Matplotlib, NumPy","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Боронина Валерия Алексеевна,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Орлова Ульяна Алексеевна,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Елфимова Дарья Сергеевна,"Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
100,Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка,"Разработка программного обеспечения для управления аппаратом вспомогательного кровообращения (АВК) в обход левого желудочка;
Цели: разработать модель АВК в обход левого желудочка (на языке C#) и изучить поставленные вопросы;
Задачи:
1. Изучение проблемы управления АВК
2. Подбор управления для ротора насоса АВК
3. Обеспечить устойчивую работу осевого АВК на активных магнитных подшипниках",Малышев Андрей Дмитриевич,Математическая статистика,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', '.NET', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'C#', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Степанов Алексей Николаевич,"Figma, Git, Linux","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Диёров Давронхон Умид угли,"Figma, Git, Linux, Python, React, СУБД PostgreSQL","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Крутых Роман Вячеславович,"Back-end разработка, Figma, Git, Linux, Python, SQL","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Брюханов Захар Дмитриевич,"Git, Kotlin, Linux, Python, SQL, СУБД PostgreSQL, DevOps, Docker","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Сисенов Марат Мийрамович,"Back-end разработка, Git","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Забелкин Андрей Алексеевич,"Git, Математическая статистика, Linux, Управление проектами, СУБД PostgreSQL","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Слесарчук Василий Анатольевич,"CSS, Figma, Git, HTML, Linux, Matplotlib, NumPy, Python, Умение работать с API, Управление проектами","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Начкебия Руслан Шукуриевич,"Git, Linux, Python","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
31,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Федоров Никита Сергеевич,"Django, Git, HTML, Python","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Максимов Евгений Дмитриевич,"Jupyter, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Шевко Анастасия Владимировна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Воротовов Кирилл Андреевич,"Jupyter, Matplotlib, NumPy, Pandas, Python, TensorFlow, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Потапов Егор Дмитриевич,HTML,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Субботин Марк Васильевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Дереглазов Игнатий Дмитриевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Винярский Павел Павлович,"Git, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Боев Кирилл Валерьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
43,Применение машинного зрения в лазерной SLM технологии,"
Задача: создание программы, позволяющая исправлять угловые и сферические дисторсии при применении видеокамер для технологии SLM.",Бугаев Дмитрий Алексеевич,"Back-end разработка, Git, Linux, SQL, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Фехретдинов Михаил Саидович,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Кузьмин Алексей Михайлович,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Зайцев Максим Дмитриевич,Git,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Федерякин Кирилл Константинович,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Птицын Никита Игоревич,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Бахтеева Елена Валерьевна,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Софеина Алина Владимировна,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Цветков Иван Вениаминович,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Поплев Иван Юрьевич,"Matplotlib, NumPy, Data Science, Git, Linux, Python","['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Белов Кирилл Романович,"NumPy, Python, Matplotlib","['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
23,Разработка приложения для проектирования модели ракеты,"Модель ракеты представляет собой небольшую самодельною ракету с твердотопливным двигателем, взлетающую на стони метров (реже - на несколько километров) и совершающую мягкую посадку (чаще всего на парашюте).
В результате этого кейса должна быть разработана программа, в которой пользователь может задать параметры ракеты и провести симуляцию ее полета. 
Математическая модель ракеты включает в себя:
Геометрию ракеты (диаметр, длинна, форма обтекателя, форма стабилизаторов и их количество и т. д.)
Внутренний состав ракеты
Массовые характеристики ракеты, рассчитанные из геометрии компонентов и их материала
В процессе моделирования полета должны учитываться:
Угловое положение ракеты до момента раскрытия парашюта
Аэродинамические силы
Изменение массы ракеты по мере выработки топлива
Влияние температуры на плотность воздуха
Влияние ветра
",Сидоренко Софья Дмитриевна,Математическая статистика,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Маковская Алёна Николаевна,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Хрисохоидис Михаил Павлос,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Чернов Дмитрий Михайлович,"CSS, Computer Vision, Data Science, DevOps, Django, Docker, Git, HTML, Jupyter, Linux, Matplotlib, NumPy, OpenCV, Pandas, Python, SQL, Scikit-Learn, Построение Rest API, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Гареева Виолетта Ильшатовна,"Canva, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Пармененкова Дарья Сергеевна,"Математическая статистика, SQL, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Власян Вадим Арменович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Сошников Ярослав Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Покидов Максим Андреевич,"Back-end разработка, Django, HTML, Keras, Matplotlib, NumPy, Pandas, Python, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Мисник Александр Сергеевич,"Git, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
61,Урбанизация больших городов,"Оценка урбанизации быстрорастущих городов РФ (Балашиха, Краснодар, Екатеренбург) методами машинного обучения по данным снимков ДЗЗ.",Дмитриев Василий Иванович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Сенянинов Николай Юрьевич,"HTML, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Арсентьев Александр Сергеевич,"HTML, Python, Математическая статистика, Git, Machine Learning","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Князев Антон Игоревич,"Back-end разработка, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Романенко Андрей Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Ротарь Марк Витальевич,"HTML, CSS, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Семенихин Кирилл Артурович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Зайцева Ирина Дмитриевна,Разработка моделей данных,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Гринько Дамир Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
10,Генеративные нейронные сети для обработки спутниковых снимков,Применение Visual ChatGPT для обработки спутниковых снимков для задач классификации и сегментации объектов.,Романенко Дмитрий Андреевич,HTML,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Деньгов Илья Андреевич,"Linux, Matplotlib, NumPy, Python, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Сираков Дмитрий Сергеевич,"Deep Learning, Data Engineering, Computer Vision, Data Science, Jupyter, Keras, Linux, Machine Learning, Matplotlib, NumPy, Pandas, PyTorch, Python, SQL, Seaborn, Scikit-Learn, TensorFlow, СУБД PostgreSQL, Разработка моделей данных, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Бабинцева Диана Васильевна,"CSS, Data Science, Figma, Git, HTML, Jupyter, Linux, OpenCV, NumPy, Python, PyTorch, Pandas, SQL, TensorFlow, СУБД PostgreSQL, Docker, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Ермаков Ярослав Валерьевич,"Back-end разработка, Jupyter, Linux, Python, PyTorch, NumPy, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Поперечный Серафим Сергеевич,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Дорофеев Вадим Сергеевич,"Canva, CSS, Figma, Git, HTML, Jupyter, Linux, Matplotlib, NumPy, Pandas, Python, SQL, Разработка моделей данных, СУБД PostgreSQL, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Иванов Илья Михайлович,"Data Science, Git, Jupyter, Machine Learning, Matplotlib, NumPy, OpenCV, Python, Pandas, Seaborn, Scikit-Learn","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Жбанков Матвей Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Гусейнова Тамаша Мазаировна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
3,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Васин Григорий Александрович,"CSS, Data Engineering, Deep Learning, Data Science, Jupyter, Linux, Machine Learning, NumPy, Pandas, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
99,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",Лукьянова Ангелина Сергеевна,"Python, Управление проектами","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
99,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",Блудов Никита Андреевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
99,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",Алиякбяров Марат Ансарович,"Back-end разработка, Django, Docker, Git, Go, HTML, Python, SQL, Построение Rest API, Умение работать с API","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
99,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",Терещук Артемий Алексеевич,"Управление проектами, Figma, СУБД PostgreSQL, Умение работать с API","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
99,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",Шулика Владислав Константинович,Back-end разработка,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
99,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",Акимов Артем Александрович,"Git, Python, NumPy, Matplotlib","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
99,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",Великанова Анна Алексеевна,Git,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
99,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",Капланов Эльдар Тамерланович,Git,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Мозговой Никита Евгеньевич,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Горохов Михаил Сергеевич,"Git, Go, Kafka","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Малько Павел Алексеевич,"Matplotlib, NumPy, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Серякова Александра Андреевна,"Python, Figma, Canva, Git, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Тузова Ксения Кирилловна,"Python, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Адамов Артур Адамович,"Seaborn, Scikit-Learn, Deep Learning, Data Science, Git, Jupyter, Linux, Machine Learning, Matplotlib, NumPy, Pandas, PyTorch, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Потехин Фёдор Максимович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Воропаев Иван Константинович,"Back-end разработка, Kafka, SQL, СУБД PostgreSQL, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
119,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Недосекин Александр Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Трубачев Данила Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Ефименко Кирилл Игоревич,"Back-end разработка, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Малов Владислав Сергеевич,"Linux, Python, Умение работать с API, Docker, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Бурганова Элина Ильнаровна,"Data Science, Python, Linux, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Звездин Артур Андреевич,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Мудров Павел Федорович,"Git, Figma, Docker, Python, Django","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Хомченко Арсений Александрович,"CSS, Django, Back-end разработка, Git, HTML, Docker, Linux, Matplotlib, Python, SQL, СУБД PostgreSQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Баширов Рустам Шамильевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Широков Кирилл Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
65,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Подрядчиков Денис Романович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Карпова Анастасия Дмитриевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Небоженко Владислав Тимурович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Баршай Владимир Михайлович,"CSS, HTML, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Столповский Фёдор Максимович,"CSS, Deep Learning, Data Science, Data Engineering, Django, Figma, Git, HTML, Jupyter, NumPy, Pandas, Python, PyTorch, React, SQL, TensorFlow, Математическая статистика, СУБД PostgreSQL, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Рябкин Игорь Андреевич,"Python, Pandas","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Осипов Никита Вячеславович,"Data Engineering, Deep Learning, Data Science, SQL, Python, PyTorch, Pandas, NumPy, Scikit-Learn, TensorFlow, Математическая статистика, Matplotlib, Machine Learning, Linux, Keras, Docker, Computer Vision, DevOps, Django, Git, Jupyter, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Мелоян Гоар Оганесовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Жигайлов Дмитрий Алексеевич,"Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Асташкин Данила Дмитриевич,"Python, Математическая статистика, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
123,Прогнозирование численности учащихся СПО с учетом экономических параметров,"Решается задача прогноза численности обучающихся в организациях, осуществляющих обр. деятельность по образовательным программам среднего профессионального образования по субъектам РФ. Используются открытые данные по численности обучающихся за прошлые года, территориальные экономические параметры региона, макроэкономические факторы.",Таратун Алексей Викторович,"Matplotlib, Pandas, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Баровик Олег Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Ананских Валерия Игоревна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Поваренкова Таисия Александровна,"Git, Математическая статистика, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Морковской Максим Игоревич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Постников Всеволод Юрьевич,"Git, Linux, Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Рябинский Александр Сергеевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Полковников Дмитрий Николаевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Мицкевич Сергей Михайлович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
85,Оптимизация обслуживания скважин ,"На основании описания задачи по обслуживанию нефтяных скважин необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:

•	модель должна учитывать возможность ее последующей реализации программными методами;

•	модель должна учитывать возможность поиска оптимального решения путем дробления задачи (общего набора данных) на консистентные подмножества и последовательное решение задачи на более коротких временных интервалах.
",Жуков Антон Сергеевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Соколов Александр Николаевич,"CSS, Data Science, Figma, Git, HTML, Jupyter, Linux, NumPy, OpenCV, Python","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Шульц Богдан Евгеньевич,"Back-end разработка, Computer Vision, Git, Linux, OpenCV, СУБД PostgreSQL","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Шевцов Михаил Сергеевич,"Matplotlib, OpenCV, Python, HTML","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Жёлудева Злата Андреевна,"Canva, Figma, Git, Linux, Python, Управление проектами","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Господарик Матвей Егорович,"HTML, Математическая статистика","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Искинова Диана Артуровна,Математическая статистика,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Кузьмин Захар Романович,"Git, Keras, Linux, OpenCV, Python","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Алимов Даниил Сергеевич,Figma,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Плюснин Савелий Геннадьевич,"SQL, Git, СУБД PostgreSQL","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
95,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Мироненко Александр Игоревич,Python,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Пантелеев Владимир Сергеевич,"Figma, Python, Математическая статистика, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Бикеев Вадим Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Велижанина Аксинья Дмитриевна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Попов Виктор Викторович,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Климова Анастасия Сергеевна,"Python, Разработка моделей данных, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Гагаринов Михаил Борисович,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Гвоздев Сергей Игоревич,Linux,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Руденко Екатерина Сергеевна,"Canva, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Мустафина Зарина Аликовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Рублева София Сергеевна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
30,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Переславцев Иван Дмитриевич,"Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Романов Михаил Олегович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Коконов Александр Дмитриевич,"Python, Математическая статистика, Разработка моделей данных","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Гардиевский Владислав Вадимович,"Управление проектами, Linux","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Тимофеев Даниил Сергеевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Коптев Дмитрий Иванович,HTML,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Лошаков Данил Геннадьевич,"Python, Git","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Филиппов Андрей Сергеевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Кошелев Данила Андреевич,"Python, Математическая статистика","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Перец Александр Александрович,"CSS, HTML","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
75,Прогноз природных катастроф в Сочи,"Прогнозирование опасных ситуаций (оползни, сели, обвалы) в районе Большого Сочи по данным ДЗЗ.",Новиков Артём Алексеевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Дробышевский Дмитрий Антонович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Унгурян Елизавета Юрьевна,"Управление проектами, Canva","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Самсонова Валерия Юрьевна,"Canva, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Кравченко Мария Александровна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Липатов Владимир Александрович,Figma,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Шумейко Марина Сергеевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Савушкин Игнат Евгеньевич,"Figma, Управление проектами, Математическая статистика, Python","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Михайлов Илья Дмитриевич,Figma,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Киосе Даниил Геннадьевич,"Figma, Математическая статистика, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
40,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Алексеев Данила Андреевич,Figma,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Голубев Петр Максимович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Голубева Анна Олеговна,"Canva, Управление проектами","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Фоменко Владислав Евгеньевич,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Пешкилев Анатолий Александрович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Павлов Иван Алексеевич,"CSS, Django, HTML, Python, NumPy","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Цуркан Михаил Сергеевич,Математическая статистика,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Абдулгалимов Антон Валерьевич,"Back-end разработка, Computer Vision, Data Engineering, Data Science, Deep Learning, Docker, ETL, Git, Jupyter, Kafka, Keras, Machine Learning, NumPy, OpenCV, Pandas, PyTorch, Python, SQL, Scikit-Learn, Seaborn, TensorFlow, Математическая статистика, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API, Управление проектами, Matplotlib","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Дроздов Александр Евгеньевич,Python,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Маняхин Павел Владимирович,"Python, Математическая статистика, Git","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
39,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Янц Даниил Игоревич,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Шукайло Екатерина Алексеевна,"CSS, Git, HTML, Математическая статистика, Machine Learning, Deep Learning","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Кажекин Денис Андреевич,"Computer Vision, Data Science, Deep Learning, Docker, Git, Linux, Machine Learning, Matplotlib, NumPy, Pandas, PyTorch, Python, SQL, Scikit-Learn, Математическая статистика, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Колупаева Владислава Сергеевна,"Figma, Python, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Куракина Злата Ивановна,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Казанцев Данила Игоревич,"Back-end разработка, Django, Docker, Git, SQL, СУБД PostgreSQL, Умение работать с API, Python, Linux, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Горелков Игорь Павлович,"Back-end разработка, DevOps, Django, Docker, Git, SQL, Python, Pandas, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Медведева Алина Владиславовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Кравцов Алексей Геннадьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
53,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Леонтьева Дарья Андреевна,"HTML, SQL, Математическая статистика, Git, Pandas, NumPy","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Турлаков Владислав Тимурович,"Data Science, Matplotlib, NumPy, Pandas, Python, SQL, Seaborn, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Леонтьева Юлия Борисовна,"Jupyter, OpenCV, TensorFlow, Python, Deep Learning, Keras, Machine Learning, Matplotlib","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Кулинич Елизавета Андреевна,"CSS, Figma, Git, HTML, Linux, Построение Rest API, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Команяк Александр Ярославович,"CSS, HTML, Git, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Полиенко Вениамин Сергеевич,"Back-end разработка, CSS, Django, Docker, Git, HTML, Linux, Python, React, Построение Rest API, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Шилин Иван Сергеевич,"Canva, CSS, HTML, Git, Kotlin, Python, SQL, Разработка моделей данных, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Ким Андрей Дмитриевич,"Deep Learning, Git, OpenCV, SQL, Умение работать с API, Построение Rest API, Python, Linux, Data Science","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Пихотина Ксения Геннадьевна,СУБД PostgreSQL,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Беляев Иван Игоревич,"Jupyter, NumPy, Pandas, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
102,Пайплайн классификации космических снимков,Алгоритмы автоматизированной классификации космических снимков: алгоритмы попиксельной и объектно- ориентированной классификации,Караваев Кирилл Романович,"Data Engineering, Data Science, Git, Jupyter, Machine Learning, Matplotlib, NumPy, Pandas, Python, SQL, Scikit-Learn, Seaborn, Математическая статистика, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Одинцов Артём Максимович,"Git, Linux","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Доронин Илья Леонидович,"Jupyter, Linux, Machine Learning, NumPy, Pandas, Python","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Иванова Ульяна Ивановна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Гуцулюк Александр Сергеевич,"Canva, Go, Git","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Шипилова Татьяна Павловна,"Git, Figma, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Андреев Иван Владимирович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Астахова Анастасия Сергеевна,"Python, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Касумова Наида Рашидовна,"CSS, Figma, HTML, Matplotlib, NumPy, SQL, Python","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Бойков Павел Александрович,"CSS, HTML","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
111,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Мальков Илья Владиславович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Селин Павел Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Леонова Елизавета Алексеевна,"HTML, Jupyter, Pandas, Python, CSS","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Беляков Валентин Александрович,"SQL, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Кочев Дмитрий Олегович,"Back-end разработка, CSS, Git, Django, HTML, NumPy, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Вольменский Григорий Яковлевич,"Pandas, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Целяева Анна Сергеевна,"Canva, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Круглов Данил Константинович,"Figma, Git, SQL, СУБД PostgreSQL, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Серый Никита Олегович,DevOps,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Власова Лада Алексеевна,"HTML, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Доянова Виктория Алексеевна,"Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
118,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Постнов Леонид Алексеевич,"Figma, Python, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Канова Виктория Витальевна,"CSS, DevOps, Docker, HTML, Figma","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Бондарев Вячеслав Евгеньевич,"Data Science, Математическая статистика","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Новиков Андрей Вадимович,Python,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Александрова Вероника Игоревна,"Управление проектами, Умение работать с API","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Зиновьева Наталия Руслановна,"Matplotlib, NumPy, Python, SQL, Scikit-Learn, Seaborn, СУБД PostgreSQL, Управление проектами, Математическая статистика","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Шкулёв Данила Игоревич,Математическая статистика,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Кисс Станислава Руслановна,"HTML, Python","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Тихомирова Мария Олеговна,Figma,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Метельков Никита Ильич,"Python, PyTorch, NumPy, TensorFlow, OpenCV","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
84,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Филипенко Юлия Романовна,"Python, SQL","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Соколова Виктория Дмитриевна,"Git, Python","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Соловьева Мария Викторовна,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Гиголаев Антон Александрович,"Back-end разработка, Git, Linux, Python, SQL, СУБД PostgreSQL, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Сычев Артем Александрович,"Git, Docker, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Цирулев Николай Владимирович,"CSS, Git, HTML, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Сорокин Артем Валериевич,"CSS, Django, Git, HTML, Linux, Python, SQL, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Слетюрин Кирилл Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Игитова Александра Андреевна,SQL,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Чапалда Мария Олеговна,"CSS, Canva, Docker, Figma, Git, HTML, Управление проектами, Pandas, NumPy, Matplotlib, Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
92,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Ларин Илья Андреевич,"Figma, Git, Linux, NumPy, Pandas, Python, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
45,Моделирование работы мешалок для перемешивания активного ила с водой,"**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Модель


**Цель проекта:**
Подбор и расстановка мешалок в сооружении биологической очистки сточной воды на основе характеристик работы устройства с целью подбора оптимальных режимов перемешивания 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор программы для CFD-моделирования
3. разработка геометрии
4. подбор оборудования-мешалок 
5. расстановка оборудования в модели
6. спрогнозировать картину течения жидкости и осаждения активного ила
7. определение скоростей и застойных зон в сооружении 


**Результат проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество 


**Необходимые ресурсы для выполнения проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество ",Савцов Матвей Эдуардович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
45,Моделирование работы мешалок для перемешивания активного ила с водой,"**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Модель


**Цель проекта:**
Подбор и расстановка мешалок в сооружении биологической очистки сточной воды на основе характеристик работы устройства с целью подбора оптимальных режимов перемешивания 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор программы для CFD-моделирования
3. разработка геометрии
4. подбор оборудования-мешалок 
5. расстановка оборудования в модели
6. спрогнозировать картину течения жидкости и осаждения активного ила
7. определение скоростей и застойных зон в сооружении 


**Результат проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество 


**Необходимые ресурсы для выполнения проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество ",Медведева Дарья Дмитриевна,"NumPy, Python, Matplotlib","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
45,Моделирование работы мешалок для перемешивания активного ила с водой,"**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Модель


**Цель проекта:**
Подбор и расстановка мешалок в сооружении биологической очистки сточной воды на основе характеристик работы устройства с целью подбора оптимальных режимов перемешивания 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор программы для CFD-моделирования
3. разработка геометрии
4. подбор оборудования-мешалок 
5. расстановка оборудования в модели
6. спрогнозировать картину течения жидкости и осаждения активного ила
7. определение скоростей и застойных зон в сооружении 


**Результат проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество 


**Необходимые ресурсы для выполнения проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество ",Торшин Артём Андреевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
45,Моделирование работы мешалок для перемешивания активного ила с водой,"**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Модель


**Цель проекта:**
Подбор и расстановка мешалок в сооружении биологической очистки сточной воды на основе характеристик работы устройства с целью подбора оптимальных режимов перемешивания 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор программы для CFD-моделирования
3. разработка геометрии
4. подбор оборудования-мешалок 
5. расстановка оборудования в модели
6. спрогнозировать картину течения жидкости и осаждения активного ила
7. определение скоростей и застойных зон в сооружении 


**Результат проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество 


**Необходимые ресурсы для выполнения проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество ",Элешова Виктория Михайловна,"Linux, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
45,Моделирование работы мешалок для перемешивания активного ила с водой,"**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Модель


**Цель проекта:**
Подбор и расстановка мешалок в сооружении биологической очистки сточной воды на основе характеристик работы устройства с целью подбора оптимальных режимов перемешивания 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор программы для CFD-моделирования
3. разработка геометрии
4. подбор оборудования-мешалок 
5. расстановка оборудования в модели
6. спрогнозировать картину течения жидкости и осаждения активного ила
7. определение скоростей и застойных зон в сооружении 


**Результат проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество 


**Необходимые ресурсы для выполнения проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество ",Ермакова Анна Романовна,"Figma, Canva","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
45,Моделирование работы мешалок для перемешивания активного ила с водой,"**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Модель


**Цель проекта:**
Подбор и расстановка мешалок в сооружении биологической очистки сточной воды на основе характеристик работы устройства с целью подбора оптимальных режимов перемешивания 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор программы для CFD-моделирования
3. разработка геометрии
4. подбор оборудования-мешалок 
5. расстановка оборудования в модели
6. спрогнозировать картину течения жидкости и осаждения активного ила
7. определение скоростей и застойных зон в сооружении 


**Результат проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество 


**Необходимые ресурсы для выполнения проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество ",Новиков Артём Дмитриевич,"NumPy, Pandas, Jupyter, Matplotlib","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
45,Моделирование работы мешалок для перемешивания активного ила с водой,"**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Модель


**Цель проекта:**
Подбор и расстановка мешалок в сооружении биологической очистки сточной воды на основе характеристик работы устройства с целью подбора оптимальных режимов перемешивания 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор программы для CFD-моделирования
3. разработка геометрии
4. подбор оборудования-мешалок 
5. расстановка оборудования в модели
6. спрогнозировать картину течения жидкости и осаждения активного ила
7. определение скоростей и застойных зон в сооружении 


**Результат проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество 


**Необходимые ресурсы для выполнения проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество ",Куров Никита Сергеевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
45,Моделирование работы мешалок для перемешивания активного ила с водой,"**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Модель


**Цель проекта:**
Подбор и расстановка мешалок в сооружении биологической очистки сточной воды на основе характеристик работы устройства с целью подбора оптимальных режимов перемешивания 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор программы для CFD-моделирования
3. разработка геометрии
4. подбор оборудования-мешалок 
5. расстановка оборудования в модели
6. спрогнозировать картину течения жидкости и осаждения активного ила
7. определение скоростей и застойных зон в сооружении 


**Результат проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество 


**Необходимые ресурсы для выполнения проекта:**
CFD-модель, позволяющая увидеть скорости, застойные зоны и как следствие подобрать тип оборудования и его количество ",Иванов Владимир Юрьевич,"Git, Pandas, NumPy, Matplotlib, Jupyter, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Меньшиков Алексей Андреевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Точилин Егор Денисович,"Docker, Linux, Matplotlib, Python, Jupyter, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Овчинников Алексей Петрович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Данильченко Александр Владимирович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Доровских Александр Юрьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Дегтярёв Алексей Павлович,"Python, Matplotlib","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Ельцов Ярослав Владимирович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Генделевич Михаил Леонидович,"Canva, Data Science, Matplotlib, NumPy, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Петрова Ксения Сергеевна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
72,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Кобелева Виктория Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Ландо Олег Юрьевич,Git,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Крыласов Леонид Андреевич,"Git, Linux, Python, SQL, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Гаврилов Максим Сергеевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Мелешкин Василий Вячеславович,"Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Витковский Георгий Витальевич,"Git, Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Пирогов Иван Александрович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Зарудный Павел Леонидович,"Git, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Феодосьев Николай Артемович,"Computer Vision, Data Engineering, Data Science, Deep Learning, Jupyter, Keras, Machine Learning, Matplotlib, NumPy, Pandas, Python, SQL, Scikit-Learn, TensorFlow, Математическая статистика, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Плахова Ангелина Андреевна,"Jupyter, Python, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
35,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Шатунова Анастасия Сергеевна,"Python, Data Science, Jupyter, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
29,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Аскаров Руслан Хабибуллоевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
29,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Хлыстов Михаил Станиславович,"Python, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
29,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Кухтенкова Полина Геннадьевна,"Python, Data Engineering, Computer Vision, Data Science, Deep Learning, Figma, Git, HTML, Jupyter, CSS, Pandas, NumPy, Keras, Matplotlib, Machine Learning, Kotlin, OpenCV, SQL, PyTorch, Scikit-Learn, Seaborn, TensorFlow, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
29,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Петреченко Елена Владимировна,"Canva, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
29,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Багиров Эльдар Рустамович,"Back-end разработка, Docker, Git, Linux, Python, СУБД PostgreSQL, Умение работать с API, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
29,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Рахмизянов Александр Сергеевич,"DevOps, Back-end разработка, Docker, HTML, Git, Go, Kubernetes, Linux, Python, Умение работать с API, CSS, СУБД PostgreSQL, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
29,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Дебда Антон Сергеевич,"Figma, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Семенов Валентин Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Моисеев Данил Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Голюнов Михаил Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Бурцов Алексей Михайлович,"Django, Back-end разработка, Git, HTML, Kotlin, Python, SQL, Pandas, Умение работать с API, Математическая статистика, CSS","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Рощектаев Денис Евгеньевич,"Python, СУБД PostgreSQL, HTML, Django","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Шилов Василий Алексеевич,"Kotlin, NumPy, OpenCV, PyTorch, Python, TensorFlow, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Волошинская Евгения Владимировна,"SQL, Python, Figma","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Антонов Арсений Михайлович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Кликушин Александр Вадимович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
141,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Дубов Михаил Сергеевич,"DevOps, Django, Docker, Git, HTML, Jupyter, Kotlin, Kubernetes, Linux, Matplotlib, NumPy, Pandas, Python, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API, Управление проектами, Back-end разработка","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Галкин Алексей Дмитриевич,"Linux, Git, Figma, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Немкова Анастасия Романовна,"Git, Linux","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Старостина Анна Андреевна,"Git, NumPy, Docker, Figma, Linux, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Останина Анна Андреевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Былькова Кристина Алексеевна,"Linux, Figma, Git, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Анциборко Леонид Витальевич,"CSS, HTML, Python, NumPy, SQL, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Плуталова Елена Дмитриевна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Зиновьев Данил Игоревич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",ИБРАГИМОВ ДАЛГАТ МАГОМЕДАЛИЕВИЧ,"Back-end разработка, CSS, Computer Vision, Data Science, DevOps, Docker, Figma, Git, HTML, Jupyter, Linux, Machine Learning, Matplotlib, NumPy, Pandas, Python, React, SQL, Scikit-Learn, Seaborn, Умение работать с API, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
6,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Кочкожаров Иван Вячеславович,"Git, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Скирдов Андрей Павлович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Меньшиков Александр Игоревич,"Data Engineering, Data Science, SQL, Математическая статистика, Разработка моделей данных, СУБД PostgreSQL, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Дубинин Владимир Алексеевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Балтаханова Алина Алексеевна,"Jupyter, Matplotlib, NumPy, SQL, Python, Pandas","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Мозолевская Виктория Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Булеков Кирилл Олегович,"Back-end разработка, Docker, Linux, Построение Rest API, СУБД PostgreSQL, Умение работать с API, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Саакян Артем Арменович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Глухов Даниил Игоревич,"Python, Linux, Seaborn, Управление проектами, Matplotlib, Pandas","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Иванищев Александр Эдуардович,"Python, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
24,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Кадыков Иван Дмитриевич,"Git, NumPy, Pandas, Matplotlib, Python, SQL, СУБД PostgreSQL, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Шляхтина Илона Игоревна,"Back-end разработка, Docker, Python, Linux, Jupyter","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Тихонов Евгений Павлович,"Back-end разработка, CSS, Canva, Django, Figma, Git, HTML, Linux, Matplotlib, NumPy, Python, SQL, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Копылов Михаил Юрьевич,"Python, Matplotlib, NumPy, Pandas, PyTorch, Scikit-Learn, Seaborn, TensorFlow, SQL, Математическая статистика, Keras, Jupyter, Data Engineering, Deep Learning, Data Science, Computer Vision","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Трофимов Владислав Олегович,"Back-end разработка, Docker, Django, Git, Go, Linux, Kafka, Kubernetes, Python, SQL, Построение Rest API, Умение работать с API, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Чистяков Константин Сергеевич,"Управление проектами, Git, Docker, Figma, Kafka, PyTorch, Pandas, NumPy, Linux, Kubernetes, Python, SQL, TensorFlow, Jupyter","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Карнаков Никита Дмитриевич,"CSS, Git, HTML, Jupyter, Matplotlib, NumPy, PyTorch, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Кирилин Иван Олегович,"Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Рокотянский Александр Евгеньевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Беспалов Вячеслав Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Амурский Василий Андреевич,"Figma, Git, Kafka, Linux, СУБД PostgreSQL, Разработка моделей данных, Умение работать с API, Управление проектами, Построение Rest API, SQL, Python, NumPy, DevOps, Docker, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
121,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Рудаков Никита Алексеевич,"Back-end разработка, Docker, DevOps, Git, Go, Python, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Проданик Валерий Александрович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Зимин Никита Эдуардович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Скрыпченко Егор Николаевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Есипова Ирина Сергеевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Швецов Анатолий Андреевич,"Canva, Computer Vision, Data Science, Python, SQL, Математическая статистика","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Буглова Ангелина Алексеевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Дорошкевич Софья Олеговна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Шевелев Максим Альбертович,Python,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Куликов Амвросий Дмитриевич,"Python, Pandas, Docker, Deep Learning, Kafka, Keras, ETL, Hadoop, DevOps, Jupyter, Machine Learning, Kotlin, Figma, Canva, Computer Vision, Matplotlib, Seaborn, Математическая статистика, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
80,Классификация типа личности клиента алгоритмами машинного обучения c учетом экономических параметров контекстных данных,"Решается задача классификации на основе полученных данных о клиенте из анкет, используя алгоритмы ML. Контекстные данные клиента (место проживания клиента и т.п.) оцениваются с точки зрения экономических параметров, найденных в открытых источниках.",Ермаков Илья Александрович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Мышкина Варвара Владимировна,Git,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Бурунов Михаил Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Панкина Елизавета Дмитриевна,"Git, Canva, Figma, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Медведев Никита Андреевич,"Git, Django, Linux, Jupyter, NumPy, Matplotlib, Pandas, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Мацкепладзе Алексей Валерианович,"Data Science, Data Engineering, Django, Pandas, NumPy, Python, Умение работать с API, Jupyter, HTML, CSS","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Ларченко Арсений Олегович,"Linux, Git, NumPy, OpenCV, Machine Learning, Pandas","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Сарайкин Никита Сергеевич,"Back-end разработка, CSS, Docker, Git, HTML, Kubernetes, Linux, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Филатов Алексей Кириллович,"CSS, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
67,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Свиридов Степан Юрьевич,Linux,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Лозневой Даниил Дмитриевич,"Python, Git, Linux, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Казанцев Артём Олегович,"Data Engineering, Data Science, Deep Learning, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Романов Василий Юрьевич,"Django, Back-end разработка, Python, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Полетаева Александра Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Кадышев Константин Тимурович,"Data Science, Jupyter, Python, NumPy, Matplotlib, СУБД PostgreSQL, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Ровкина Алина Эдуардовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Хохлов Роман Эдуардович,Matplotlib,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Хохлов Александр Игоревич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Васильев Всеволод Сергеевич,"HTML, Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
20,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Кудлай Егор Владимирович,"Python, Pandas","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Лошаков Иван Евгеньевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Лоскутов Всеволод Дмитриевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Титов Владимир Александрович,"CSS, Back-end разработка, Docker, Django, Git, HTML, Linux, Python, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Брагин Евгений Игоревич,"Figma, Linux, Python, Умение работать с API, Pandas, NumPy, Back-end разработка, Git, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Карпов Дмитрий Евгеньевич,"Back-end разработка, Matplotlib, Python, SQL, Разработка моделей данных, СУБД PostgreSQL, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Гаджимагомедов Давид Юсифович,"CSS, Canva, Django, Figma, Git, HTML, Linux, PyTorch, Python, React, SQL, Построение Rest API, СУБД PostgreSQL, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Пукита Андрей Владимирович,"Back-end разработка, Figma, HTML, Git, Django, CSS, Linux, Matplotlib, Pandas, NumPy, SQL, TensorFlow, Python, СУБД PostgreSQL, Разработка моделей данных, Data Engineering","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Пядухов Тимофей Андреевич,"CSS, Linux, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Борзенков Вадим Витальевич,"Django, HTML, Git, Python, SQL, Back-end разработка, CSS, NumPy, Matplotlib, СУБД PostgreSQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
63,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Борзенков Артём Витальевич,"Back-end разработка, Django, Git, HTML, Python, Pandas, NumPy, Machine Learning, Linux, Matplotlib, SQL, TensorFlow, СУБД PostgreSQL, CSS, Умение работать с API, Построение Rest API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Качалов Владимир Владимирович,"Figma, Python, Canva, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Войтман Наталья Евгеньевна,Figma,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Бельцов Дмитрий Дмитриевич,Figma,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Ушморова Анастасия Владиславовна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Протасов Глеб Денисович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Токарева Ксения Денисовна,"Canva, Figma, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Зайцева Дарья Дмитриевна,Python,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Москвина Дарья Юрьевна,Figma,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Ефремченков Игорь Сергеевич,"SQL, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
124,Создание виртуального персонажа для соц.сетей с помощью генеративного ИИ,"Создаём телеграм-канал/вк аккаунт для виртуальной студентки МАИ с помощью консистентной генерации фотографий и текстов.
https://twitter.com/chaseleantj/status/1692155286306668840",Александрова Екатерина Николаевна,"Figma, Canva","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Гилязова Ирина Юрьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Перелетов Александр Максимович,"Git, Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Яценко Денис Сергеевич,"Jupyter, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Голубева Алина Сергеевна,SQL,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Дудин Дмитрий Артёмович,"Back-end разработка, Git, Jupyter, Python, SQL, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Жарова Наталья Николаевна,"Git, OpenCV, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Захарова Екатерина Андреевна,HTML,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Черепанова Светлана Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Гущин Артём Павлович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
50,"Разработка ПО на ПК для управления панелью индикации с обратной связью (qt, C/C++, Ethernet UDP)","**Обмен eth udp**

1. Поиск собственного ip-адреса в необходимой подсети
2. Приём данных
3. Отправка данных
4. Протокол обмена

**Дизайн интерфейса**

1. Индикация обмена
2. Индикация ошибки обмена
3. Несколько кнопок с обратной связью
4. Анимация ожидания ответа",Матюшенко Роман Викторович,"Git, Jupyter, Python, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'SSR', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Кирхлерова Эльмира Газиевна,"Управление проектами, Figma","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Куренкова Мария Антоновна,"AirFlow, Управление проектами, Умение работать с API","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Дубникова Анастасия Игоревна,"Canva, Управление проектами, Figma","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Суханова Дарья Александровна,"Canva, Figma, Git, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Чернов Даниил Игоревич,PyTorch,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Мыльникова Анастасия Дмитриевна,"Figma, Управление проектами, Математическая статистика, Canva","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Егорина Ева Анатольевна,Управление проектами,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Миклашевский Данила Вячеславович,Управление проектами,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Перевезенцева Ксения Олеговна,"Figma, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
76,Создание рекламного ролика цифровой кафедры МАИ с помощью генеративных моделей,"Используем консистентные референсные изображения и генерацию видео (Runway Gen2). Пишем вместе сценарий с помощью LLM, затем разбиваем на фрагменты, генерируемые студентами группы.",Галина Диана Айратовна,"Figma, Canva, Python, Математическая статистика, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Photoshop', 'Matplotlib', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
54,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Просторядин Александр Андреевич,"Canva, Linux, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
54,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Люкшин Илья Александрович,Git,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
54,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Хасанова Алина Раифовна,Canva,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
54,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Хабирова Виктория Денисовна,"Python, Figma","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
54,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Пак Владислав Андреевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
54,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Строев Василий Иванович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
54,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Горбачев Андрей Алексеевич,Git,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
54,Программная реализация SLAM алгоритмов с использованием только визуального канала данных с целью поиска объектов,"Кратко, задумка в следующем: в симулируемой среде с большим количеством сторонних объектов у нас будет существовать робот, в задачи которого будет входить решение задачи SLAM (возможно разными алгоритмами), а также обнаружение и отметка людей на строящейся карте. Для создания робота и среды будут задействованы ROS и Gazebo, а для видеодетекции людей - машинное обучение. Проделанная работа, теоретически, будет интересна, например, МЧС для проведения спасательных работ в разрушенных помещениях.
",Мартынов Матвей Юрьевич,"Python, Git, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Переслегин Павел Александрович,"Python, Jupyter","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Степанов Пётр Юрьевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Елькин Алексей Валерьевич,"Canva, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Чванова Наталья Игоревна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Жульева Анна Денисовна,"Canva, Jupyter, Управление проектами, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Шеметов Виталий Викторович,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Кудря Михаил Антонович,"HTML, Linux, Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Иванов Константин Юрьевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Колпакчи Иван Сергеевич,"Python, Linux, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
93,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Авдеев Денис Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Хлудеев Константин Викторович,"Back-end разработка, HTML, Jupyter, Docker, Deep Learning, CSS, Computer Vision, Data Science, Django, Git, Linux, NumPy, Pandas, OpenCV, TensorFlow, Python, Keras, Machine Learning, Matplotlib, PyTorch, Умение работать с API, Построение Rest API, Seaborn, Scikit-Learn, СУБД PostgreSQL, Управление проектами","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Егоров Дмитрий Валерьевич,"Python, Математическая статистика, Разработка моделей данных, Git","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Попов Дмитрий Сергеевич,"AirFlow, Back-end разработка, Computer Vision, Data Engineering, ETL, Git, Linux, Kafka, Python, SQL, Jupyter, Docker, Разработка моделей данных, СУБД PostgreSQL, Построение Rest API, OpenCV, PyTorch, Умение работать с API","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Гунько Данила Антонович,"Docker, HTML, Jupyter, Kafka, Kubernetes, Matplotlib, NumPy, PyTorch, СУБД PostgreSQL","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Когтев Владислав Дмитриевич,"Data Science, Computer Vision, Docker, Figma, Git, Jupyter, Kubernetes, Linux, Machine Learning, Matplotlib, NumPy, OpenCV, Pandas, PyTorch, Python, Scikit-Learn, Seaborn, Математическая статистика, Построение Rest API, Умение работать с API, СУБД PostgreSQL, SQL, ETL","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Мантлер Никита Кириллович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Егоров Тимофей Михайлович,"CSS, Linux, NumPy, OpenCV, Pandas, Python, SQL, СУБД PostgreSQL, Умение работать с API, HTML","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Еловский Дмитрий Романович,"NumPy, Pandas, Git, HTML, Python, SQL, Умение работать с API, Управление проектами","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Чухрий Александр Михайлович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
55,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Колганов Роман Андреевич,"Canva, Computer Vision, Data Science, Figma, Git, NumPy, Pandas, Python, Jupyter, Matplotlib","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Богатова Анна Андреевна,"CSS, Figma, Git, HTML, Python, SQL, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Первакова Виктория Алексеевна,"SQL, Python, Figma, HTML, CSS","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Гордин Богдан Антонович,"HTML, Git, Figma, React, CSS, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Топилин Антон Сергеевич,"Data Science, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Косов Иван Алексеевич,"Git, SQL, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Баранова Варвара Михайловна,"HTML, Git, CSS, Linux, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Улямаев Руслан Ильдарович,"Back-end разработка, CSS, Git, Figma, Linux, HTML, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Ревтов Максим Николаевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Колесов Илья Сергеевич,"Back-end разработка, CSS, Canva, Computer Vision, Data Engineering, Data Science, Deep Learning, DevOps, Django, Docker, ETL, Figma, Git, Go, HTML, Hadoop, Jupyter, Kafka, Keras, Kotlin, Kubernetes, Linux, Machine Learning, Matplotlib, NumPy, ONNX Runtime, OpenCV, Pandas, PyTorch, Python, React, SQL, Scikit-Learn, Seaborn, TensorFlow, Математическая статистика, Построение Rest API, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
66,Мониторинг посевов в Амурской области,"Оперативный мониторинг состояния посевов и равномерности всходов ячменя, сорняков по данным спутниковых снимков в Амурской области.",Муравлева Ольга Кирилловна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Ибрагимов Роман Рифхатович,"Git, Linux, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Шипилов Кирилл Юрьевич,"CSS, Figma, Git, HTML, Linux, Python, React","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Теребаев Кирилл Дмитриевич,"CSS, HTML, Git","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Ляхов Владимир Андреевич,"Git, Linux, Python, OpenCV","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Морозов Дмитрий Алексеевич,"HTML, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Бачурин Павел Дмитриевич,"Back-end разработка, Docker, Go, Git, СУБД PostgreSQL, Умение работать с API, Построение Rest API","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Ахметшин Булат Рамилевич,"Git, Back-end разработка, Python, Linux","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Шубин Павел Алексеевич,"Back-end разработка, Django, NumPy, HTML","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Тюмин Данила Ярославович,"Python, NumPy","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
87,AI Service Scaler,"Проект ""AI Service Scaler"" направлен на разработку системы, которая с помощью искусственного интеллекта (AI) автоматизирует процесс масштабирования сервисов в Kubernetes (k8s). Этот проект предполагает использование передовых технологий для анализа и прогнозирования потребностей в ресурсах приложений, развернутых в кластерах Kubernetes, что позволяет осуществлять масштабирование более эффективно и в автоматическом режиме.

Цели проекта:
- Автоматизация масштабирования: Разработка системы, способной самостоятельно анализировать нагрузку на сервисы и на основе этих данных принимать решения о необходимости масштабирования вверх или вниз.
- Интеграция с Kubernetes: Глубокая интеграция с экосистемой Kubernetes для обеспечения совместимости и максимальной эффективности работы системы.
- Использование AI для анализа данных: Применение алгоритмов искусственного интеллекта для анализа метрик работы приложений и предсказания требований к ресурсам.
- Повышение эффективности использования ресурсов: Оптимизация расходов на инфраструктуру за счет более точного масштабирования сервисов в соответствии с их реальными потребностями.

Ключевые компоненты:
- Анализаторы состояния сервисов: Модули для мониторинга и анализа работы сервисов в реальном времени, использующие AI для выявления тенденций и паттернов в нагрузке на приложения.
- Модуль принятия решений о масштабировании: Компонент, отвечающий за принятие решений о масштабировании на основе анализа данных и предсказаний AI.
- Интерфейс взаимодействия с Kubernetes: Система будет тесно интегрирована с Kubernetes для автоматизации процесса масштабирования, используя стандартные инструменты и API Kubernetes для управления ресурсами.

Технологическая база:
Проект может опираться на существующие разработки в области интеграции AI с Kubernetes, такие как k8sgpt и Kubeflow. k8sgpt предоставляет инструменты для диагностики и анализа кластеров Kubernetes с помощью AI, включая возможности для генерации и аутентификации API ключей OpenAI и управления фильтрами анализа. Kubeflow, в свою очередь, является проектом, направленным на упрощение развертывания рабочих процессов машинного обучения на Kubernetes, обеспечивая простую, переносимую и масштабируемую платформу для ML",Клименко Виталий Максимович,"Computer Vision, Git, Jupyter, Linux, Matplotlib, NumPy, OpenCV, Python, SQL, СУБД PostgreSQL, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Кузнецов Мирон Сергеевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Киселев Артём Олегович,"Git, Go, Python, Docker, Back-end разработка, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Бучкин Тимур Артемович,"Back-end разработка, CSS, Figma, Git, HTML, Jupyter, Linux, NumPy, OpenCV, Python, PyTorch, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Тихонова Мария Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Селиванов Игорь Андреевич,"Computer Vision, Data Science, Git, Jupyter, Matplotlib, OpenCV, NumPy, Pandas, Python, Scikit-Learn, Seaborn, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Шидловский Никита Сергеевич,Математическая статистика,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Коваленко Александр Игоревич,"Data Science, Git, Jupyter, Machine Learning, Matplotlib, NumPy, Pandas, Python, Scikit-Learn, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Кислицына Ирина Михайловна,"Управление проектами, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
7,Методы визуального осмотра строительных конструкций с применением автономных роботов и алгоритмов машинного обучения,Применение роботов как замена визуального контроля на стройке. В качестве робота используется модель Unitree A1 ИТ-Центра (робособака Дора). Для запуска алгоритмов машинного обучения применяется микрокомпьютер Jetson Xavier,Веловатый Кирилл Евгеньевич,"SQL, СУБД PostgreSQL, Умение работать с API, Git, Back-end разработка, Linux, Python, Pandas","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Абдуллаев Егор Низамиевич,"Git, Go, Python","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Новиков Артём Александрович,"HTML, Figma, CSS","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Чапкин Владислав Вячеславович,"Back-end разработка, Git, Figma, Go, Docker, Jupyter, Python, Matplotlib, Machine Learning, Linux, СУБД PostgreSQL, Умение работать с API, SQL, Kafka, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Бровина Виктория Дмитриевна,"Back-end разработка, Git, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Лохматов Никита Игоревич,"CSS, Docker, Figma, HTML, Git, Linux, Python, React, Управление проектами, Умение работать с API","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Мезенин Олег Александрович,"Git, Построение Rest API, Python, Docker","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Синюков Антон Сергеевич,"Back-end разработка, Django, Git, Go, Python, SQL, Построение Rest API, СУБД PostgreSQL","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Овчинников Дмитрий Максимович,"СУБД PostgreSQL, SQL, Docker, Back-end разработка, Построение Rest API, Kafka, Git, DevOps, AirFlow, Java, Java","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Беляков Владислав Анатольевич,"Git, СУБД PostgreSQL, SQL","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Чиняков Игорь Павлович,"Git, SQL","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
25,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Устинов Денис Александрович,"Back-end разработка, Git, Kotlin, Linux, Kubernetes, Построение Rest API, СУБД PostgreSQL","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Шатилин Денис Михайлович,"Git, HTML, Jupyter, Matplotlib, NumPy, Pandas, Python, SQL, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Марков Александр Сергеевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Артемов Борис Витальевич,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Факеев Данила Михайлович,"Back-end разработка, Data Science, Django, HTML, Jupyter, Matplotlib, NumPy, Pandas, Python, Scikit-Learn, Seaborn, Математическая статистика, Git, CSS","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Чаплыгина Арина Сергеевна,"Jupyter, Matplotlib, Canva, NumPy, Pandas, Python, SQL, Seaborn, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Надербаев Наиль Димович,"DevOps, Docker, Go, Git, HTML, CSS, Linux, SQL, СУБД PostgreSQL, Построение Rest API, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Миронова Алиса Игоревна,"CSS, Figma, HTML, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Войнов Вадим Дмитриевич,"Figma, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Фан Кирилл,"Data Science, Git, Математическая статистика, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Серебряков Максим Андреевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
28,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Коняхина Наталья Сергеевна,"Git, Jupyter, Linux, Python, Математическая статистика, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Барыбина Елизавета Игоревна,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Дзёба Анастасия Сергеевна,"Python, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Рудометкина Ксения Сергеевна,"Figma, Python, Back-end разработка, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Тарасенко Никита Дмитриевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Воробьева Анастасия Владимировна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Тимошенко Варвара Сергеевна,"Python, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Киселева Ангелина Юрьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Морозова Кира Эдуардовна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
140,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Куслина Карина Владимировна,"Canva, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Козлов Иван Павлович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Шеина Маргарита Алексеевна,"Canva, Data Science, Git, HTML, Jupyter, Machine Learning, Matplotlib, NumPy, OpenCV, Pandas, Python, SQL, Scikit-Learn, Математическая статистика, Разработка моделей данных, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Павлов Владимир Сергеевич,"HTML, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Чередников Родион Фархадович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Жеребцова Ксения Сергеевна,Git,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Серяцкая Ксения Дмитриевна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Манаенкова Кристина Викторовна,"Figma, HTML, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Курочкин Сергей Владимирович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Сбродова Александра Владимировна,"Figma, Git, Linux, Matplotlib, NumPy, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
113,Контроль перемещений строительных конструкций с применением алгоритмов машинного обучения и компьютерного зрения,"Развитие методик дистанционного контроля деформаций и
перемещений (фотограмметрия, графические метки, программы обработки
DIC-digital image correlation со стандартных источников изображений). Контроль перемещений строительных конструкций.",Журавлев Алексей Николаевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Гасанов Анар,"Matplotlib, NumPy, Pandas, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Фишер Игорь Владимирович,"Back-end разработка, Git, NumPy, Python, SQL, СУБД PostgreSQL, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Кузнецов Артём Русланович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Дьяченко Андрей Александрович,"NumPy, Keras, Back-end разработка, Python, TensorFlow, Jupyter, Scikit-Learn, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Метелева Варвара Николаевна,"Git, Linux, SQL, СУБД PostgreSQL, Jupyter","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Хоружая Софья Константиновна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Захарченко Светлана Александровна,"СУБД PostgreSQL, HTML, CSS, Django, Git, Python, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Мосунов Андрей Игоревич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Алисов Алексей Алексеевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
109,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Шостак Максим Константинович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Тонких Семен Андреевич,"CSS, HTML, Figma, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Капралов Сергей Антонович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Сафонникова Анна Романовна,"Управление проектами, SQL, Python, Математическая статистика, Figma, Jupyter, Matplotlib, NumPy, Pandas, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Казаков Максим Алексеевич,"Go, Python, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Клепиков Дмитрий Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Алапанова Эльза Халилевна,"Python, Pandas, Matplotlib, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Дубровин Дмитрий Константинович,"Django, Python, СУБД PostgreSQL, Back-end разработка, Git, NumPy, Pandas, PyTorch, Разработка моделей данных, Docker, Matplotlib, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Боев Савелий Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Бадалян Тигран Арменович,"Git, Figma, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
48,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Иванов Андрей Кириллович,"Git, Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Свешников Егор Владимирович,"Matplotlib, Python, SQL, Jupyter, Django, NumPy, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Ткач Иван Романович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Камзолов Павел Павлович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Дайбов Игорь Вячеславович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Марков Алексей Петрович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Афанасьев Александр Сергеевич,"Back-end разработка, Data Science, Deep Learning, Docker, Git, Jupyter, Matplotlib, NumPy, Pandas, PyTorch, Python, SQL, Scikit-Learn, Математическая статистика, СУБД PostgreSQL, Умение работать с API, Machine Learning","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Юрский Игорь Русланович,"Django, Git, Pandas, React, Figma, Python, Canva, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Петренко Илья Дмитриевич,"Data Science, NumPy, OpenCV, Математическая статистика, Pandas, Kotlin","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Гаприндашвили Илья Самсонович,"Back-end разработка, NumPy, Умение работать с API, CSS, Git, HTML, Linux, Kotlin, Python, SQL, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
77,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Фабин Владислав Алексеевич,"Python, HTML","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Филиппов Фёдор Иванович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Хомченков Илья Максимович,"Git, HTML, Умение работать с API, Построение Rest API, SQL, React, CSS, Back-end разработка, Python, Разработка моделей данных, Управление проектами, Docker","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Воробьева Карина Николаевна,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Тепляков Иван Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Чекан Никита Алексеевич,"Управление проектами, NumPy","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Кучиева Ирина Алановна,"Back-end разработка, Git, Figma, HTML, Docker, CSS, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Васютинский Вадим Александрович,"Machine Learning, Построение Rest API, NumPy, Pandas, Jupyter, SQL, Python, Scikit-Learn, Умение работать с API, СУБД PostgreSQL, Deep Learning, Data Science, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Примаченко Александр Александрович,"Back-end разработка, Docker, Git, Go, Kafka, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API, Разработка моделей данных, Kotlin","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Кирсанов Григорий Романович,"Back-end разработка, Docker, DevOps, Git, Jupyter, Linux, NumPy, Python, SQL, Математическая статистика, Разработка моделей данных, СУБД PostgreSQL, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
47,Разработка ПО для расчета и профилирования лопатки газотурбинного двигателя,"**Цель**

Разработка программы для расчета и профилирования лопатки газотурбинного двигателя с использованием суперкомпьютера, обеспечивающей точный расчет профиля лопатки с учетом всех важных факторов, влияющих на аэродинамику.

**Бизнес-задачи**

- [ ] Разработать программное обеспечение, которое позволит точно рассчитать профиль лопатки газотурбинного двигателя с учетом всех важных факторов, влияющих на аэродинамику.
- [ ] Программное обеспечение должно быть масштабируемым и производительным, чтобы его можно было использовать на суперкомпьютерах.
- [ ] Программное обеспечение должно иметь удобный пользовательский интерфейс, позволяющий задавать параметры среды и получать результаты расчета.

**Ожидаемые результаты**

Реализация проекта позволит предприятиям, разрабатывающим газотурбинные двигатели, получать более точные расчеты профиля лопатки. Это приведет к повышению эффективности и надежности двигателей.
",Забелин Никита Алексеевич,"CSS, Django, Git, Go, HTML, Kafka, Linux, Python, React, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Java', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Савельев Константин Павлович,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Грубенко Максим Дмитриевич,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Бухонов Константин Андреевич,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Воронцов Данила Артемьевич,"Back-end разработка, CSS, Docker, Figma, Django, Git, HTML, Kafka, Python, React, SQL, СУБД PostgreSQL, Умение работать с API, Java","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Буловятов Артем Максимович,Back-end разработка,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Воскресенский Антон Федорович,"Back-end разработка, Git, Linux, SQL, СУБД PostgreSQL, Умение работать с API","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Иванченко Дарья Владимировна,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Нестерова Полина Денисовна,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Денисов Максим Денисович,"Git, Python, SQL, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
4,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Третьяков Никита Михайлович,"CSS, HTML","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Богомолова Наталия Константиновна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Горшкова Полина Сергеевна,"Back-end разработка, Django, Docker, Git, Jupyter, Linux, Pandas, Python, Построение Rest API, СУБД PostgreSQL, Умение работать с API, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Гуро Анастасия Игоревна,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Селейдарян Екатерина Артуровна,"Git, Pandas, NumPy, Figma, Python, OpenCV","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Мальцев Игорь Александрович,"Data Science, Docker, Git, Go, Jupyter, OpenCV, Pandas, Python, Seaborn, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Ступак Ольга Алексеевна,"DevOps, Git, Linux, NumPy, Matplotlib, Machine Learning, Pandas, OpenCV, Python, SQL, Seaborn, Математическая статистика, Разработка моделей данных, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Ситникова Виктория Андреевна,"Canva, Figma, Git, Linux, NumPy, OpenCV, Pandas, PyTorch, Python, SQL, Seaborn, Математическая статистика, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Степанов Алексей Сергеевич,"HTML, Matplotlib, NumPy, OpenCV","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Лавриненко Сергей Александрович,"Django, Git, Linux, NumPy, Python, SQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
94,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Прокофьев Сергей Алексеевич,"OpenCV, Python, СУБД PostgreSQL, Умение работать с API, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Левитин Николай Ильич,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Бобров Андрей Евгеньевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Флоча Вадим Анатольевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Шеин Роман Александрович,"HTML, Python, NumPy, Linux, Matplotlib","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Жакович Анна Дмитриевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Золотухин Александр Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Торунов Евгений Сергеевич,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Степаненко Пётр Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
97,Редкие животные в ЯНАО,"Система автоматического подсчета редких животных (северные олени, моржи) в Ямало-Ненецкий автономный округе и на северных островах РФ при помощи нейронных сетей по изображениям аэрофотосъемки.
",Шатохин Дмитрий Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Носов Александр Константинович,"CSS, HTML, Git, Linux","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Днепров Степан Сергеевич,"Django, Docker, DevOps, Git, Linux, Построение Rest API, Умение работать с API, NumPy, OpenCV, Matplotlib, Go, HTML, Back-end разработка, СУБД PostgreSQL","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Евсеев Юрий Владимирович,"CSS, Git, HTML, React, Умение работать с API","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Марков Владимир Игоревич,"CSS, Git, HTML, React","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Мунтяну Алексей Владимирович,,"['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Березуцкий Иван Викторович,Back-end разработка,"['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Белякова Софья Андреевна,"CSS, Figma, Git, HTML, Jupyter, Linux, NumPy, OpenCV, Python, React, Умение работать с API","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Шангин Даниил Денисович,"Python, СУБД PostgreSQL, PyTorch, Pandas, NumPy, Back-end разработка, Data Science, Data Engineering","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Ступина Мария Алексеевна,"Figma, Canva","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Новиков Никита Сергеевич,"DevOps, Django, Docker, Git, Kafka, Kubernetes, Linux, Python, Построение Rest API, СУБД PostgreSQL, Умение работать с API, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
2,Платформа командообразования,"Для эффективного командообразования студентов с разных факультетов и курсов, обучающихся на программах Цифровой кафедры необходим удобный механизм объдинения в команды и выбора проектов",Белушкин Антон Романович,"Git, Linux, СУБД PostgreSQL, Построение Rest API, Java","['UI/UX', 'Linux', 'Умение работать с API', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'JavaScript']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Фанатов Михаил Владиславович,"Deep Learning, Docker, Git, Keras, Linux, Machine Learning, Pandas, Python, TensorFlow, Scikit-Learn, Jupyter, Kubernetes, Matplotlib, NumPy, PyTorch, Computer Vision, Data Engineering, Data Science, Back-end разработка","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Кабанов Антон Алексеевич,"Python, Linux","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Чернышева Софья Павловна,"Kotlin, Python","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Сибирцев Роман Денисович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Халимов Исмоилджон Ибрагимджонович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Козырев Пётр Андреевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Горюнов Даниил Владимирович,"Git, Linux, Matplotlib, Python","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Караев Тариел Жоомартбекович,"Back-end разработка, Git, Linux, Python, Управление проектами","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Цыбулько Даниил Викторович,"Git, Jupyter, Управление проектами, Python","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
56,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Жильцов Никита Владимирович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Стерхов Алексей Сергеевич,Python,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Рычков Александр Сергеевич,"Git, Computer Vision, NumPy, Pandas, Matplotlib, Jupyter, OpenCV","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Рямова Софья Алексеевна,"Управление проектами, Linux, Canva","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Арютин Владимир Андреевич,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Коновалов Сергей Алексеевич,"Jupyter, SQL","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Асанов Салим Тимурович,"Canva, Figma, Git, Jupyter, Matplotlib, NumPy, Python","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Тихонов Максим Алексеевич,Python,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Дементьев Даниил Андреевич,Python,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Жуков Ярослав Александрович,"NumPy, OpenCV","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
58,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Гужов Андрей Ильич,Python,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Чувашев Даниел Александрович,"Django, Python, Back-end разработка, HTML, SQL, Git, CSS","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Губарева Мира Константиновна,"Django, Git","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Ожередов Григорий Михайлович,"Matplotlib, Git, NumPy, Python, SQL, Linux","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Антипова Марина Сергеевна,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Даудов Магомедрасул Нажигулаевич,Python,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Кокорев Алексей Викторович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Сироткин Иван Борисович,Python,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Разгоняев Никита Андреевич,"SQL, Python","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Губайдуллина Светлана Ринатовна,"Python, Управление проектами","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Галкина Софья Вадимовна,Python,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Кравченко Анна Сергеевна,"HTML, Математическая статистика","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
90,"Создание моделей машинного обучения по космическим снимкам сверхвысокого пространственного разрешения для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. ",Кожихова Алёна Александровна,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
237,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Алешкин Иван Андреевич,"Jupyter, Linux, OpenCV, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
237,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Иванов Сергей Иванович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
237,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Басангов Александр Анатольевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
237,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Лось Вадим Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
237,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Гусев Егор Игоревич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
237,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Бугулов Александр Асланбекович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
237,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",Бородулин Артем Константинович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
238,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Осьмак Максим Константинович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Евтихов Михаил Михайлович,"Git, Django, Docker, Linux, Python, Back-end разработка, SQL, Построение Rest API, Умение работать с API","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Газизова Мария Васильевна,Python,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Кучумаров Кирилл Алексеевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Хакимов Денис Айратович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Новокрещенов Валерий Сергеевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Золотенкова Мария Константиновна,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Григорьев Владимир Александрович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Кручинин Андрей Александрович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
239,Удаление облаков,Алгоритм удаления облаков на спутниковых снимках с использованием различных методов машинного обучения.,Миронов Платон Кириллович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Никифоров Роман Валерьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Сухоручко Светлана Игоревна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Войтухов Макар Романович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Черницев Данила Юрьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Митрофанов Артем Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Меджидли Исмаил Ибрагим оглы,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Никоненко Аристарх Евгеньевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Шишкин Артем Константинович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Ульбашев Ислам Муратович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Тишин Степан Валерьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
240,Карта горных выработок в Красноярском крае,Оценка горных выработок в районе добычи золото-добывающего карьеров «Олимпиада» и «Благодатное» в Красноярском крае с использованием данных ДЗЗ,Жупиков Иван Андреевич,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Степанов Алексей Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Ланцевский Степан Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Михальченкова Анастасия Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Уваров Владимир Александрович,"HTML, SQL, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Ташбаев Данил Батыралиевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Чернов Дмитрий Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Кульченко Елизавета Евгеньевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Степанищева София Владиславовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Копылова Екатерина Дмитриевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Нозиков Михаил Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Сукачева Ангелина Николаевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
241,Карта нефтяных загрязнений,Определение нефтяных загрязнений на поверхности морей РФ (Черное и Азовское) по данным снимков ДЗЗ.,Прунова Есения Александровна,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Ильиных Иван Романович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Сухоруков Александр Вадимович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Метлов Артем Михайлович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Просвирина Любовь Кирилловна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Варгас Евгения Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Яровой Фёдор Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Магергут Иван Вячеславович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Калинский Тимур Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Мосин Андрей Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Прохоров Александр Васильевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
242,Тепловые процессы лазерных установок,Математическое моделирование тепловых процессов в элементах конструкций лазерных технологических установок ,Емельянов Егор Дмитриевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Иванников Вячеслав Игоревич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Горобец Николай Андреевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Антия Михаил,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Маркин Дмитрий Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Драч Владимир Васильевич,"Canva, Matplotlib, NumPy, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Шальнов Максим Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Рязанов Никита Андреевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Кобилев Артемий Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Клесова Ульяна Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
357,Анализ соосности колонн в строительстве методами машинного обучения,"Контроль качества поверхности бетона, заключающийся в выявлении поверхностных дефектов бетона, оценки их влияния на несущую способность, в первую очередь по параметру - количество дефектов на квадратный метр). Данная технология также может быть использована для разработки автоматизированных комплексов контроля качества железобетонных конструкций для заводов ЖБИ",Зворыгина Анастасия Владимировна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
246,Алгоритмы машинного обучения для определения нарушений дыхания во сне,"Компания АО ""Медиатек"" проектирует и эксплуатирует большое количество приборов для получения информации о здоровьте человека. Требуется разработать алгоритмы AI определение сна, дыхательных событий, типов нарушений сна (апноэ, гипапноэ), падения насыщения кислородом в крови, типов нарушений дыхания во сне.
Стек технологий:
- Python,
- NumPy,
- TensorFlow,
- C#,
- C++,
- Matlab",Троицкий Артём Ильич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
246,Алгоритмы машинного обучения для определения нарушений дыхания во сне,"Компания АО ""Медиатек"" проектирует и эксплуатирует большое количество приборов для получения информации о здоровьте человека. Требуется разработать алгоритмы AI определение сна, дыхательных событий, типов нарушений сна (апноэ, гипапноэ), падения насыщения кислородом в крови, типов нарушений дыхания во сне.
Стек технологий:
- Python,
- NumPy,
- TensorFlow,
- C#,
- C++,
- Matlab",Евтеев Даниил Максимович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
246,Алгоритмы машинного обучения для определения нарушений дыхания во сне,"Компания АО ""Медиатек"" проектирует и эксплуатирует большое количество приборов для получения информации о здоровьте человека. Требуется разработать алгоритмы AI определение сна, дыхательных событий, типов нарушений сна (апноэ, гипапноэ), падения насыщения кислородом в крови, типов нарушений дыхания во сне.
Стек технологий:
- Python,
- NumPy,
- TensorFlow,
- C#,
- C++,
- Matlab",Цуканов Михаил Олегович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
246,Алгоритмы машинного обучения для определения нарушений дыхания во сне,"Компания АО ""Медиатек"" проектирует и эксплуатирует большое количество приборов для получения информации о здоровьте человека. Требуется разработать алгоритмы AI определение сна, дыхательных событий, типов нарушений сна (апноэ, гипапноэ), падения насыщения кислородом в крови, типов нарушений дыхания во сне.
Стек технологий:
- Python,
- NumPy,
- TensorFlow,
- C#,
- C++,
- Matlab",Кудрявцев Антон Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
246,Алгоритмы машинного обучения для определения нарушений дыхания во сне,"Компания АО ""Медиатек"" проектирует и эксплуатирует большое количество приборов для получения информации о здоровьте человека. Требуется разработать алгоритмы AI определение сна, дыхательных событий, типов нарушений сна (апноэ, гипапноэ), падения насыщения кислородом в крови, типов нарушений дыхания во сне.
Стек технологий:
- Python,
- NumPy,
- TensorFlow,
- C#,
- C++,
- Matlab",Гнездилов Иван Вадимович,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
246,Алгоритмы машинного обучения для определения нарушений дыхания во сне,"Компания АО ""Медиатек"" проектирует и эксплуатирует большое количество приборов для получения информации о здоровьте человека. Требуется разработать алгоритмы AI определение сна, дыхательных событий, типов нарушений сна (апноэ, гипапноэ), падения насыщения кислородом в крови, типов нарушений дыхания во сне.
Стек технологий:
- Python,
- NumPy,
- TensorFlow,
- C#,
- C++,
- Matlab",Стёпина Валерия Андреевна,"Математическая статистика, Canva","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'Git', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
247,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Алиходжаев Тимур Зафархонович,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
247,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Батоян Роберт Левонович,"Back-end разработка, Разработка моделей данных","['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
247,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Полежаев Владислав Александрович,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
247,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Семенов Андрей Александрович,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
247,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Еремеев Павел Николаевич,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
247,Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования,"Компания АО ""Медиатек"" собирает данные с большого парка устройств сбора данных медицинской информации о состоянии здоровья пациентов. Текущая система сбора данных требует модернизации и масштабирования.

Развитие системы GlobalMonitoring в части адаптации протокола обмена данных с системой телемониторирования",Чеканов Михаил Александрович,,"['Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Spring Boot', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Java', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Ботвинов Иван Сергеевич,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Курбатов Владимир Андронович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Гулина Виктория Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Теленин Иван Васильевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Анучкин Сергей Владиславович,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Устименко Владислав Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Чура Александр Игоревич,"Python, Matplotlib, NumPy, Pandas","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Гаврилова Алёна Владимировна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
248,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Силаева Елизавета Валерьевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Виноградов Игорь Евгеньевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Пухляков Кирилл Сергеевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Гулай Егор Сергеевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Гниденко Павел Николаевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Козырь Дария Сергеевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Кунахов Андрей Алексеевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Алмазов Николай Константинович,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Симакова Светлана Дмитриевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
356,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Вихрова Екатерина Андреевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
250,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Рябов Дмитрий Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
250,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Горкин Михаил Борисович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
250,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Аракелян Гайк Артакович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
250,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Алешин Никита Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
250,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Вологдин Илья Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
250,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Барышников Никита Сергеевич,"Back-end разработка, Django, Git, Go, Python, SQL, СУБД PostgreSQL, Умение работать с API, Docker","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
250,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Бабин Антон Викторович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
251,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
252,"Создание моделей машинного обучения по аэрофотоснимкам для поиска самолетов, кораблей, автомобилей и прочей техники","В рамках задачи нужно на предоставленном датасете создать классификатор для 10 видов объектов: 1. Легковый автомобиль 2. Спец.техника 3. Грузовой автомобиль 4. Автобус 5. Поезд 6. Самолет 7. Вертолет 8. Маленькое судно 9. Среднее судно 10. Большое судно

Итоговое решение должно на предоставленных для тестах снимках найти и посчитать заявленные объекты. 
",,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Ващенко Лев Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Кафиятуллин Линар Ринатович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Толстиков Максим Дмитриевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Вечерний Кирилл Артемович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Голышев Арсений Романович,"Git, NumPy, OpenCV, Pandas, Python, SQL, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Рассказов Лев Георгиевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Калинин Александр Олегович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Меркушев Иван Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Левин Данила Романович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
253,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Мутускин Иван Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Курышев Илья Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Ганичкин Вячеслав Александрович,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Бессонов Данила Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Терентьев Илья Владимирович,"HTML, Git, Figma, Docker, CSS, React","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Мягков Сергей Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Бубнов Андрей Дмитриевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Клочкова Яна Юрьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Бухтияров Никита Денисович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Турова Алина Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Жеребцов Сергей Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
254,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Коробкова Анна Вадимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Лиханский Дмитрий Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Баликов Ильдар Ренатович,HTML,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Коноплев Артём Валерьевич,"Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Голубева Алевтина Григорьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Медведев Максим Алексеевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Моисеев Илья Николаевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Щербинкин Кирилл Дмитриевич,SQL,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Вершинина Мария Вячеславовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Капша Тимофей Юрьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
255,Рекомендательная система подбора новых курсов для переобучения сотрудников,"Требования:
1. Реализовать систему тестирования на наличие компетенций
2. Разработать рекомендательный алгоритм
3. Создать систему хранения учебных курсов с учетом развивающих компетенций
",Максимов Егор Константинович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Ромахин Владислав Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Нагрудный Семён Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Климов Илья Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Русскин Даниил Николаевич,"Computer Vision, Git, Linux, Python, Pandas, TensorFlow, PyTorch, OpenCV, NumPy, Matplotlib","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Ханова Ирина Ренатовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Подгорный Кирилл Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Багмет Максим Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Терентьев Даниил Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Романюкин Дмитрий Вячеславович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Дюдин Илья Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
256,Анализ новостей для предсказания движения акций на фондовом рынке,"#### Цель Проекта

Разработать систему анализа и предсказания движения акций компаний на фондовом рынке на основе анализа новостей из СМИ и телеграм-каналов. Проект направлен на изучение взаимосвязи между новостным контентом и поведением акций, а также разработку модели машинного обучения, способной предсказывать изменения в цене акций на основе анализа полученных данных.

**Основные задачи**

1. *Сбор и предобработка данных:*

- Автоматизировать процесс сбора новостей из различных СМИ и телеграм-каналов, связанных с финансовым рынком и конкретными компаниями.
- Очистить данные от шума, несущественной информации и предобработать текст для анализа (удаление стоп-слов, лемматизация).

2. *Анализ сентимента:*

- Разработать или интегрировать существующие инструменты для анализа сентимента новостей, чтобы оценить общее отношение (позитивное, нейтральное, негативное) к упомянутой компании.

3. *Корреляционный анализ:*

- Исследовать корреляцию между изменениями в сентименте новостей и движениями цен акций компаний.

4. *Разработка модели предсказания:*

- На основе полученных данных разработать модель машинного обучения, которая сможет предсказывать движение акций на короткий срок.

5. *Тестирование и валидация:*

- Провести обширное тестирование модели на исторических данных, анализировать ошибки и точность предсказаний.
- Валидировать модель, используя свежие данные, чтобы проверить её способность к адаптации к текущему рыночному контексту.

#### Технические Инструменты

- *Сбор данных*: Python (библиотеки requests, BeautifulSoup для веб-скрапинга).
- *Предобработка и анализ данных*: Python (NLTK, spaCy для обработки текста; pandas для обработки данных).
- *Моделирование:* Python (библиотеки Scikit-learn, TensorFlow или PyTorch для разработки моделей машинного обучения).
- *Визуализация*: Python (Matplotlib, Seaborn для визуализации результатов).

#### Ожидаемые Результаты

- Разработанная система способна анализировать новостные данные и на их основе делать предсказания относительно движения акций на фондовом рынке.
- Подробный анализ точности и надёжности модели, включая её способность адаптироваться к изменяющимся рыночным условиям.
- Рекомендации по дальнейшему улучшению и масштабированию системы.

#### Значение Проекта

Проект позволит глубже понять влияние публичного настроения, отражённого в СМИ и телеграм-каналах, на фондовый рынок. Результаты могут быть использованы для разработки торговых стратегий, улучшения инвестиционного анализа и предоставления ценных инсайтов инвесторам и аналитикам.",Сорокин Владислав Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Пономарев Александр Дмитриевич,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Шарыгин Егор Дмитриевич,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Симонов Эдуард Романович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Мнацаканов Артур Арсенович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Побожный Данила Алексеевич,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Карсанин Александр Романович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Свиридов Михаил Андреевич,"Pandas, NumPy, Matplotlib, Python","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Петросян Альберт Владимирович,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
257,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Кыскин Валерий Сергеевич,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Шевлягин Владислав Николаевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Ким Олег Денисович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Серов Юрий Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Чернышев Илья Дмитриевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Вахрушев Максим Сергеевич,"HTML, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Грачев Дмитрий Михайлович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Гришин Алексей Владимирович,"Docker, СУБД PostgreSQL, SQL, Linux, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Власов Юрий Дмитриевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
258,Медицинская информационная аналитическая система,"Эта система должна помогать врачам быстрее и удобнее вести приём клиентов, составление электронных медицинских карт и прочее.
Также с помощью ии можно создать иконки интерфейса, анализ данных клиентов.",Пахомова Диана Павловна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
260,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Круглов Иван Денисович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Подлесных Екатерина Геннадьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Несмелова Дария Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Примак Андрей Сергеевич,"Figma, Математическая статистика, СУБД PostgreSQL, Back-end разработка, HTML, CSS, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Пахомов Алексей Юрьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Никитина Анастасия Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Тимонин Василий Константинович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Гагаринов Даниил Максимович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Афанасьев Александр Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
263,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Блинов Кирилл Романович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Подборнова Дарина Ростомовна,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Велигоров Иван Владимирович,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Беляев Иван Дмитриевич,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Кронштадтский-карев Александр Анатольевич,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Логинова Анастасия Максимовна,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Белоглазов Ян Олегович,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Гасанов Тимур Серажутдинович,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Кучеренко Алексей Иванович,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Политко Александр Андреевич,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
264,Управляющие программы для лазеров,Разработка управляющих программ для специального лазерного технологического оборудования,Пыхарев Сергей Геннадьевич,,"['ROS', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'C++', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Артемьев Тихон Владимирович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Маркевич Полина Андреевна,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Хамидова Азизахон Баходуровна,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Харитонов Андрей Александрович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Павлов Кирилл Андреевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Афин Роман Русланович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Глобина Екатерина Игоревна,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Соколова Татьяна Андреевна,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Осипенко Гавриил Васильевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Попкова Ульяна Вячеславовна,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
268,"Обработка открытых данных SCADA и разработка  модели предсказания выработки мощности для  ветропарка по данным соревнования  KDD CUP 2022""","Ветроэнергетика – нестабильная генерация электроэнергии.

📌Задача кейса: 

Пространственный динамический прогноз скорости и мощности на 48 часов вперед. 

📎Более подробную информацию о проекте, вы получите выбрав этот кейс!",Соколова Ирина Викторовна,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Марьясов Тимур Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Балашев Владимир Владимирович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Зеленин Савелий Дмитриевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Тугушева Дарья Николаевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Мадатян Нарек Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Лубков Андрей Романович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Коростелкина Дарья Юрьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Рогожин Дмитрий Романович,"Linux, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Сорокин Егор Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
269,Моделирование производства продукции с учетом доступности компонентов,"В данном кейсе необходимо создать математическую модель поиска оптимального решения с учетом следующих требований:
1. Модель должна учитывать возможность ее последующей реализации программными методами
2. Модель должна масштабироваться с учетом добавления новых типов продуктов (для каждого продукта будет указан приоритет).

**Бизнес-задача**

- [ ] С целью сокращения остатков деталей, хранимых на складе, произвести из имеющихся различных составных частей максимальное количество продукции (1 тип продукта).
- [ ] Закупить минимально необходимое количество составных частей для достижения целевого уровня производства продукции с учетом п.1.

**Результат** 

Программное обеспечение, реализованное на платформе Linux | SQL | Python (etc...), web-based, с интерфейсом пользователя
",Шишлянникова Варвара Дмитриевна,"Figma, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Мар Тихон Григорьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Филиппов Артем Анатольевич,Linux,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Панькин Павел Евгеньевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Смирнов Андрей Дмитриевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Васютина Александра Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Алексин Дмитрий Дмитриевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Ковалев Антон Игоревич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Синюк Мартин Максимович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
270,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Зиборов Максим Юрьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
271,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
273,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
274,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
275,Классификация сельхозкультур Краснодарского края,"Классификации различных сельскохозяйственных культур (пшеница, рожь, ячмень, овес, фуражные травы, подсолнечник, соя, сахарная свекла) в Краснодарском крае на спутниковых снимках с использованием нейронных сетей и индекса NDVI.",,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Танюшкин Матвей Валерьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Кашкин Григорий Владимирович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Стасюк Иван Глебович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Сафонова Екатерина Сергеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Вельковский Захар Иванович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Машталер Алевтина Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Овчинников Иван Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Севастьянов Александр Анатольевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
277,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Малафеев Андрей Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Красковский Алексей Борисович,Математическая статистика,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Маляренко Мария Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Герасимов Андрей Владимирович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Ахметзакиров Руслан Маратович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Урсегов Артем Константинович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Ударцев Борис Игоревич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Антонян Роман Гарегинович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Давыдов Артем Аркадьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Трынов Леонид Владимирович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
279,"Анализ работы многопоточного ПО, работающего под управлением ОС реального времени","В рамках данной работы нужно будет освоить основы работы с ОС реального времени, изучить подходы к анализу работы ПО на данной ОС",Гловацкий Олег Игоревич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Винокуров Владислав Юрьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Черков Георгий Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Бухарев Павел Юрьевич,"Python, Machine Learning, Seaborn, NumPy, Pandas","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Тагиров Михаил Борисович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Костельцев Семен Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Крыштоп Константин Николаевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Маркин Василий Андреевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Вязникова Елена Алексеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Рубенян Арест Ашотович,"Python, SQL, NumPy, Git, Back-end разработка","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
281,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Иванов Андрей Игоревич,"HTML, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Цырдя Кирилл Дмитриевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Слободина Маргарита Николаевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Говряков Павел Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Ахметшин Александр Евгеньевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Трикозюк Александр Анатольевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Богдановский Александр Анатольевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Семёнов Алексей Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Кобцев Владислав Евгеньевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Гончаров Матвей Владимирович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Харитонов Адиль Эмильевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
282,AIOps: Система анализа логов для поиска аномалий,"Проект ""AIOps: Система Анализа Логов для Поиска Аномалий"" направлен на разработку передовой системы искусственного интеллекта, предназначенной для мониторинга, анализа и обнаружения аномалий в логах систем. Этот проект предлагает студентам возможность работать с реальными данными и применять методы машинного обучения и глубокого обучения для решения задач AIOps (Artificial Intelligence for IT Operations).

Цели проекта:
- Разработка алгоритмов машинного обучения: Создание и обучение моделей для эффективного обнаружения аномалий в больших объемах лог-данных.
- Автоматизация процессов IT-операций: Улучшение надежности и доступности систем путем раннего обнаружения и предотвращения потенциальных сбоев.
- Анализ и обработка данных: Применение методов предварительной обработки и анализа данных для выявления закономерностей и аномалий.
- Интеграция с существующими системами: Обеспечение возможности интеграции разработанной системы с существующими инструментами мониторинга и управления IT-инфраструктурой.

Задачи проекта:
- Изучение существующих подходов AIOps: Анализ литературы и существующих решений для поиска аномалий в логах систем.
- Сбор и предварительная обработка данных: Работа с лог-файлами, очистка данных и их подготовка для анализа.
- Разработка моделей машинного обучения: Применение различных алгоритмов машинного обучения и глубокого обучения для создания моделей, способных эффективно обнаруживать аномалии.
- Тестирование и оценка системы: Проведение экспериментов для оценки эффективности разработанной системы на реальных или симулированных данных.
- Разработка архитектуры: Создание архитектуры на базе k8s с чтением системных логов различных сервисов.
- Документация и представление результатов: Подготовка технической документации и презентация результатов проекта.",Бобылева Карина Алексеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Праздников Даниил Юрьевич,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Удальцов Александр Михайлович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Тимофеев Арсений Вячеславович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Ишин Дмитрий Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Мельцаев Сергей Викторович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Кочеткова Арина Алексеевна,Canva,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Диас Антон Викторович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Глотова Екатерина Владимировна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Ларцов Иван Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
284,Алгоритм поиска первопричин ошибок и проблем производительности в микросервисных веб-приложениях.,"На сегодняшний день большинство веб-сервисов и систем представляют из себя совокупность микросервисов, которые последовательно или параллельно вызывают друг-друга, выполняя бизнес-логику и формируя конечный результат для пользователя.
При этом усложняется автоматизация и отлаживание. Ошибки и проблемы с производительностью, возникающие в одном компоненте, распространяются в системе.

Необходимо сформулировать алгоритм, визуальная часть которого может быть реализована как веб-страница, который обозначает, какой компонент системы является причиной возникшей ситуации, и высчитывает степень влияния возникшей ошибки на общее состояние системы.",Горячкин Павел Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Spring Boot', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'MUI', 'Java', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Построение Rest API', 'JavaScript']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Вдовин Андрей Владимирович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Борзунов Иван Геннадьевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Власов Артём Юрьевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Черняева Мария Юрьевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Прудников Борис Евгеньевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Басов Александр Денисович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Акимов Максим Александрович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Сухарев Максим Алексеевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Наумов Андрей Алексеевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
285,Карта бытовых отходов,Мониторинг мест складирования твердых бытовых отходов по данным спутниковых снимков и аэрофотосъемки.,Гулин Сергей Денисович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Егоров Дмитрий Игоревич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Смирнов Кирилл Кириллович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Дмитриев Иван Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Кулешов Иван Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Наврузов Рустам Яшарович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Мартынов Андрей Ильич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Новожилов Олег Дмитриевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Зайцев Антон Игоревич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Бастрыков Сергей Валерьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
286,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Лясников Дмитрий Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Тешев Аскер Альбекович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Тарасов Кирилл Константинович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Солкин Алексей Юрьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Савельев Илья Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Фадеев Иван Викторович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Новожилов Александр Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Солнцев Никита Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Пушилина Ксения Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Хайруллина Диана Динаровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
288,Нахождение аномалий в работе веб-приложения методом анализа временных рядов,"На сегодняшний день от большинства веб-сервисов требуется бесперебойная работа и отказоустойчивость. 

Для поддержания работоспособности системы используются автоматизированные системы мониторинга, которые отслеживают возникающие в системе ошибки, для уведомления ответственных лиц и устранения инцидента. Но из-за сезонности данных (например, разное количество просмотра на сайте днем и ночью), автоматизированный мониторинг с помощью стандартных инструментов становится невозможным.

Необходимо реализовать инструмент, визуальная часть которого может быть реализована как веб-страница, который анализирует работу веб-приложения, данные временных рядов (количество запросов, время ответа, потребление cpu, etc), и нахоит аномалии в этих данных.",Погорелов Филипп Михайлович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Бурдасов Григорий Сергеевич,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Кошельков Михаил Сергеевич,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Есипов Андрей Алексеевич,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Стахров Никита Васильевич,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Фамбулов Султан Нусратович,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Вернидуб Валерия Михайловна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Фугутова Милена Вячеславовна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Мантул Александр Владимирович,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
290,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Анненкова Дарья Александровна,Canva,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Черницын Александр Евгеньевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Носова Варвара Дмитриевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Вагин Всеволод Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Салихова Алиса Феликсовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Ходориков Никита Константинович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Ларионова Анастасия Андреевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Андреева Эльвира Эльдаровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Шуринок Артём Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Регуш Светлана Дмитриевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
291,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Степовой Роман Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Кулешов Сергей Максимович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Сочиянс Карина Аркадьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Сергеев Александр Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Фоменко Егор Станиславович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Селяев Салих Тимурович,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Тимохин Дмитрий Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Кириллова Анастасия Тимофеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Анциферов Алексей Павлович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Ермилова Ангелина Олеговна,"Управление проектами, Математическая статистика, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
292,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Иванушкина Таисия Максимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Шулицкая Яна Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Бушманов Иван Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Романова Анна Валерьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Герасименко Ева Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Пелипенко Анна Романовна,"CSS, Back-end разработка, Figma, Docker, HTML, Git, Linux, SQL, React, Построение Rest API, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Иванова Софья Леонидовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Кучерявых Владислав Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Кондрашкина Дарья Никитична,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Иваненко Ольга Ивановна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
293,Построение вопрос-ответного чат-бота на основании технологии Retrieval-Augmented Generation,"Имея текстовую документацию, разбиваем её на фрагменты, далее в ответ на запрос пользователя ищем актуальные фрагменты, закидываем их в запрос GPT и получаем релевантный ответ. Используем фреймворк LangChain",Романова Анастасия Михайловна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Дорохина Дарья Александровна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Чекранов Иван Владимирович,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Булатов Раиф Робертович,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Короткова Вероника Сергеевна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Пиковский Вадим Романович,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Сапрыкина Екатерина Владимировна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Филатова Анастасия Михайловна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Калван Вячеслав Олегович,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Гуськов Никита Альбертович,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
294,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Медведько Мария Александровна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Сибирякова Анна Андреевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Коломиец Наталья Игоревна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Голудина Анастасия Вадимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Мухина Дарья Васильевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Зайцев Матвей Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Скорнякова Алина Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Хасанова Арина Руслановна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Ершова Валерия Олеговна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Зыкова Варвара Максимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
295,Автоматический анализ литературных произведений с помощью больших языковых моделей и машинного обучения,"Из литературных произведений выделяем характеристики персонажей (по фрагментам/главам) и строим визуализацию, которая демострирует сюжеты, изменение персонажей по ходу произведения, позволяет сгруппировать произведения (кластеризация) и т.д.",Мун Вероника Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Прошаченко Мария Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Алакаев Мурат Амурбиевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Шубина Юлия Викторовна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Муртазина Агата Ильгизовна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Комбекова Дарья Васильевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Бухина Софья Андреевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Дроздова Ксения Евгеньевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Лях Андрей Игоревич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
296,Устранение видимого шума с фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для удаления шумовых дефектов с загружаемых на этот сервис изображений. 

Удаление шума - одна из самых распространенных задач компьютерного зрения, и, помимо прочего, является непосредственной частью множества других моделей - например, удаление шумов может использоваться для подготовки изображений для других моделей или для пост-обработки уже сгенерированных изображений.",Дергаева Юлия Анатольевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Королева Анастасия Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Мозговой Илья Юрьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Ибраимова Динара Сейрановна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Кассич Григорий Вадимович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Королев Никита Максимович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Парамонов Михаил Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Лебедев Андрей Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Кузнецов Кирилл Алексеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
297,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Пименов Дмитрий Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Маркина Наталья Евгеньевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Дыбалев Никита Валерьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Желяцкая Дарья Юрьевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Балаева Асена Мухуддин кызы,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Трепыхалин Виталий Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Палунина Софья Алексеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Баев Дмитрий Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Кленова Наталья Алексеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Довгун Елена Валентиновна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
298,Система прогнозирования использования складских мощностей,"Требования:
На основе имеющихся статистических данных загрузки складов провести аналитику и выбелить зависимости в данных для прогнозирования резервирования складских мощностей в будущем. 
Датасет предоставляется.",Протасова Анастасия Константиновна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'Data Engineering', 'ELK', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Ли Инна Робертовна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Портнова Анастасия Никитична,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Внукова Екатерина Андрияновна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Мельников Глеб Валерьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Сухова Таисия Вадимовна,Canva,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Сморчкова София Игоревна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Чеканов Глеб Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Пырков Иван Михайлович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Ткаченко Полина Алексеевна,"Canva, Figma","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
299,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Тлустовская Элизабет Юрьевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Бракк Екатерина Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Олейникова София Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Чукова Ангелина Александровна,"Canva, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Петросян Лилия Андраниковна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Брагер Анна Анатольевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Косцова Алина Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Лунева Ксения Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Габдракипова Алия Халимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Козлов Антон Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
300,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Большакова Анна Олеговна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Немогаева Мария Владимировна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Татаринов Никита Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Гапеева Мария Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Сиянова Дарья Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Лысенко Ксения Владимировна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Вильданова Софья Асхатовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Попова Екатерина Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Мяло Никита Александрович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Агапова Анастасия Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
301,Умная аналитика социальных медиа,"Разработка метода унификации в идентификации объекта интереса в сообщениях электронных СМИ

Контактное лицо: Кубриков Дмитрий Владимирович",Шмелева Елизавета Павловна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Морозова Алина Романовна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Беляева Софья Валерьевна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Наумова Дана Александровна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Прокудин Роман Павлович,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Кеворкова Елизавета Андреевна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Коршунов Григорий Сергеевич,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Чекалкина Полина Сергеевна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Агешкина Анна Алексеевна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Голишникова Мария Олеговна,"CSS, Go, Python","['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
303,Генерация графических изображений,Разработка технологии на применение генеративных нейронных сетей для графических изображений,Юнина Дарья Викторовна,,"['DevOps', 'UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Чернышова Полина Алексеевна,"Canva, Figma","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Щербакова Екатерина Сергеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Сергеев Кирилл Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Семиглазов Дмитрий Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Пучкова Алена Игоревна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Родина Ксения Васильевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Баландина Наталья Николаевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Бортникова Анна Андреевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Воробьева Екатерина Сергеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
304,Построение вопрос-ответного чат-бота на основании семантической близости запросов,"Имея текстовую документацию, с помощью LLM формируем по ней вопрос-ответные пары, затем на запрос пользователя ищем наиболее релевантную пару и выдаем соответствующий ответ.",Хаткевич Валерия Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Кондрашкова Полина Вадимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Арсёнова Мария Григорьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Красовский Денис Михайлович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Соцкова Елизавета Денисовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Санникова Арина Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Дешевых Влада Денисовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Аргашокова Милена Зауровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Говорова Елена Юрьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Антонова Арина Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
305,Восстановление цвета фотографий при помощи средств машинного обучения,"Результатом работы предполагается веб-сервис, использующий разработанную студентом математическую модель для восстановления цвета загружаемых на этот сервис изображений. 

Восстановление цветов, особенно на ранних черно-белых фотографиях, сделанных до начала XIX века, представляет достаточно сложную задачу. Однако с развитием машинного обучения данная задача получила значительный толчок и позволила получать все более и более впечатляющие результаты. """"Гонка вооружений"""" в этой сфере компьютерного зрения не прекращается ни на день.",Сагоян Наталья Игоревна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Ахунов Кудратжон Шухратович,"CSS, Canva, Figma, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Хамадиев Никита Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Лемеш Юлия Дмитриевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Спирин Александр Сергеевич,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Квасникова Елизавета Игоревна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Белонос Дарья Игоревна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Зенкова Анастасия Павловна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Самохвалова Полина Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Купцов Павел Викторович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
306,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Мясоедов Александр Иванович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
307,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Ан Диана Артуровна,"Canva, Figma, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
307,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Никифорова Мария Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
307,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Некрасова Полина Юрьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
307,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Рябиков Георгий Никитич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
307,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Тезикова Алиса Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
307,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Черниченко Евгений Кириллович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
307,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Шипневская Елизавета Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
307,Создание предсказательной модели,"**Описание задачи**

В крупной телеком компании организована дорогостоящая программа обучения с выдачей официальных дипломов ведущего ВУЗа. На программу обучения может подать заявку любой сотрудник компании независимо от региона, стажа и должности – обучение на этой программе доступно любому сотруднику.

В рамках отбора на программу проводится с помощью написания мотивационного эссе – кандидат на программу должен написать развернутый ответ на несколько вопросов. Ответы кандидатов в программу оцениваются вручную экспертами. По каждому вопросу проставляется балл по определенной шкале. За определенное время накопились данные по мотивационным эссе и поставленным оценкам (данные прилагаются).

**Задача:**
1.	На основе накопленных данных написать алгоритм, который предсказывает оценку эксперта по эссе. Рассчитать точность предсказательной модели.
2.	Создать интерфейс, который позволит пользователю загружать новые тексты эссе для обработки и получать отчет с оценками, а также предложить вариант с визуализацией отчета.
",Шаронова Владислава Андреевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Успенская Алиса Сергеевна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Ковалевич Владислав Сергеевич,"Python, PyTorch, TensorFlow, Computer Vision","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Колодонова Мария Викторовна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Успенская Виктория Ильинична,"HTML, SQL, Python, C++, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Гончаренко Екатерина Андреевна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Петрухина Анна Михайловна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Москальченко Юлиана Витальевна,"Figma, Python, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Муравицкий Ярослав Юрьевич,"HTML, Python, OpenCV","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Маклыгин Николай Анатольевич,"CSS, Computer Vision, Data Science, Git, HTML, NumPy, OpenCV, Python, Scikit-Learn, Jupyter, Matplotlib, Pandas, Seaborn","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
74,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Житов Владимир Николаевич,"Jupyter, NumPy, Управление проектами, Matplotlib","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Нгуен Ван вьет,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Гайдай Станислав Максимович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Катышев Максим Валерьевич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Погосян Эмиль Вачаганович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Полушкин Фёдор Юрьевич,"Git, Python, Matplotlib, Linux","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Забавин Игорь Игоревич,"CSS, HTML, Pandas, Python, Математическая статистика","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Парфенцев Никита Игоревич,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Чаликов Евгений Владимирович,Математическая статистика,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Зиявиддинов Амир-саидхон Дильшодович,"Jupyter, Matplotlib, NumPy, Pandas, Python, SQL, Управление проектами, Умение работать с API","['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
108,Портирование нейронных сетей компьютерного зрения на бортовые вычислительные комплексы БПЛА,"В рамках данного кейса предлагается разработать модель способную в полной мере функционировать на бортовом вычислителе с целью детекции объектов. В настоящее время сфера применения БПЛА растет с каждым днем, в рамках данной работы можно разработать прототип продукта востребованного на современном рынке.",Раченков Арсений Ростиславович,,"['DevOps', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
91,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Будочкин Владислав Максимович,CSS,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
91,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Гализдра Сергей Сергеевич,"Back-end разработка, Figma, Kotlin","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
91,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Юшко Александр Юрьевич,"HTML, Python, CSS","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
91,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Ахонен Ирина Максимовна,Python,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
91,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Петров Арсений Андреевич,"Computer Vision, HTML, Git, Linux, Matplotlib, OpenCV, Python, NumPy, SQL, Математическая статистика, Построение Rest API, Умение работать с API, Разработка моделей данных, Back-end разработка, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
91,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Марченко Александра Антоновна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
91,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Андриянов Илья Андреевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
91,Генерация комикса для абитуриентов МАИ с консистентными персонажами на основе технологии outpainting,"С помощью одного запроса генерируем одно изображение с несколькими картинками, после чего используем zoom out / outpainting для получения большого количества вариаций изображения.
https://twitter.com/chaseleantj/status/1693246015124713634",Храмов Денис Алексеевич,SQL,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Цапулина Ольга Васильевна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Лебедева Варвара Михайловна,Canva,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Гаврилин Вячеслав Артемович,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Карпюк Даниил Алексеевич,"Python, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Курданова Милана Муслимовна,"Data Science, Python, Linux, Figma, Deep Learning, Canva, HTML, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Ильина Ангелина Вадимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Селиверстова Елизавета Ивановна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Коньшина Анна Валерьевна,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Крюкова Виктория Вадимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Тулина Анна Владимировна,"Python, Математическая статистика, Canva, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
33,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Альбиков Артём Вячеславович,"Figma, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Нечаев Виктор Иванович,"Back-end разработка, Django, OpenCV, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Баталин Дмитрий Андреевич,"Data Science, Git, NumPy, Pandas, PyTorch, Python, Keras, Figma, Docker, Machine Learning","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Лебедько Платон Владимирович,CSS,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Медведев Егор Андреевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Бычков Артур Сергеевич,"Back-end разработка, Python, SQL, СУБД PostgreSQL, HTML, Django, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Суляева Алина Игоревна,"Figma, Управление проектами, Canva, Git, Linux, NumPy, Python, TensorFlow, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Ивченко Анна Владимировна,"Jupyter, Matplotlib, NumPy, TensorFlow, Python, PyTorch, Pandas, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Климов Иван Павлович,"Figma, Pandas, NumPy, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Калуцкий Максим Витальевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
101,Автоматизация тестирования автопилота,"- Взаимодействие прошивки автопилота в режиме ситл с моделью динамики
- Формирование типовых сценариев полёта и формализация ожидаемых результатов
- Проведение автоматических тестов по разработанным сценариям
- Анализ полученных результатов. Анализ близости к ожидаемым показателям. Сравнение с другими экспериментами.
",Велесов Даниил Игоревич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Photoshop', 'PostgreSQL', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Некрасов Константин Дмитриевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Васильев Даниил Александрович,"Canva, Data Engineering, Data Science, Jupyter, Linux, Machine Learning, Matplotlib, NumPy, Pandas, Python, Scikit-Learn, Seaborn","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Варнак Екатерина Валентиновна,"Управление проектами, Linux, Figma, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Ляпин Иван Алексеевич,"Figma, Jupyter, NumPy, Pandas, Python, Scikit-Learn, Seaborn","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Лисняк Александра Витальевна,"Python, HTML, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Мошенский Андрей Александрович,"Linux, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Филиппов Владимир Михайлович,"Data Science, NumPy, Matplotlib, Pandas, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Семенова Ксения Евгеньевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
79,Карта повреждений территорий,"Алгоритмы по распознаванию карьеров, вырубок, гарей, участков используемой пашни, участков леса с помощью технологий машинного обучения и компьютерного зрения на территории Ленинградской области",Блинова Мария Олеговна,"Python, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Романенко Александр Дмитриевич,"Python, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Однолетков Аркадий Евгеньевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Сырбу Дмитрий-Антон,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Попов Михаил Андреевич,"Canva, CSS, Data Science, Deep Learning, Docker, Django, Figma, Go, Git, HTML, Jupyter, Hadoop, Linux, Matplotlib, Machine Learning, NumPy, Pandas, Python, SQL, PyTorch, React, Seaborn, TensorFlow, СУБД PostgreSQL, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Богатырева Елизавета Сергеевна,"Kafka, Linux, Python, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Андрианова Раиса Рустамовна,"SQL, React, Python, HTML, Deep Learning, CSS","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Яковлев Антон Алексеевич,"Python, HTML, Data Science, Machine Learning, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Кузнецов Михаил Эдуардович,"CSS, Computer Vision, Docker, Figma, Git, HTML, Jupyter, Keras, Linux, Machine Learning, Matplotlib, NumPy, OpenCV, Pandas, Python, TensorFlow","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Карташов Роман Олегович,"SQL, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
1,Детектирование борщевика сосновского на основании данных со снимков дрона,"Цель итоговой аттестационной работы – разработка нейросетевой модели, которая способна определять в видеопотоке дрона пораженные участки подстилающей поверхности. Данная задача будет считаться выполнена, если обученная модель будет выделять Борщевик на фоне остальных растений.",Колбасенко Александр Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Жукова Анна Александровна,"Computer Vision, Data Engineering, Deep Learning, Keras, Jupyter, Data Science, OpenCV, NumPy, Matplotlib, Machine Learning, PyTorch, TensorFlow, Scikit-Learn, Python, Git","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Баканов Илья Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Чаплыгин Семён Александрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Захарушкин Евгений Игоревич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Сильянов Александр Вячеславович,"CSS, Docker, Figma, Git, HTML, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Григорьева Мария Романовна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Корчагина Анна виктория Руслановна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Баймуратов Тимур Эльдарович,"Jupyter, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Хохлова Анна Юрьевна,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
46,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Попов Антон Александрович,"Git, Matplotlib, Python, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Гончаров Роман Сергеевич,"Canva, CSS, Computer Vision, DevOps, Django, HTML, NumPy, Pandas, PyTorch, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Зеленин Максим Алексеевич,"Back-end разработка, DevOps, Django, Git, HTML, Python, SQL, Построение Rest API, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Золотарёва Виктория Алексеевна,Математическая статистика,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Кулагина Вероника Александровна,"Python, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Ткаченко Аким Владимирович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Марихин Семён Вадимович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Багиян Матвей Аркадиевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Тихомиров Андрей Николаевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
16,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Мясников Алексей Александрович,"CSS, HTML, Linux, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
115,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Комбаров Владислав Александрович,"Git, Linux, NumPy, Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
115,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Андрюшин Лев Дмитриевич,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
115,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Андриянов Эрик Вячеславович,"Python, DevOps","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
115,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Муратов Артём Алексеевич,"Back-end разработка, CSS, DevOps, Machine Learning, HTML, Git, Figma, Docker, Django, Pandas, PyTorch, Python, SQL, Scikit-Learn, Seaborn, Linux, Matplotlib","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
115,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Маслова Анастасия Алексеевна,"Python, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
115,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Модин-Глазков Богдан Арсеньевич,"Back-end разработка, Data Science, Docker, Go, Jupyter, Machine Learning, Matplotlib, NumPy, Scikit-Learn, Математическая статистика, Seaborn, Python, Pandas, Linux, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
115,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Кудинов Денис Викторович,"Python, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
115,Замена персонажей в литературных произведениях с помощью больших языковых моделей,"Экспериментируем с автоматическим переписыванием литературных произведений, например, заменяя ""Алису"" в Алисе в стране чудес на ""Иванушку-дурачка"" (с помощью Chat-GPT промптов).",Мамонтов Егор Олегович,"Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Белоусов Илья Дмитриевич,"CSS, HTML, Git, NumPy, Pandas, Python, Matplotlib, Machine Learning, Математическая статистика, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Тришин Алексей Александрович,"Data Science, Git, Matplotlib, NumPy, Pandas, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Кутилин Глеб Михайлович,"Computer Vision, Data Engineering, Django, SQL, Python, PyTorch","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Логинов Андрей Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Новиков Андрей Александрович,"Back-end разработка, CSS, Django, Docker, Git, Jupyter, Linux, Matplotlib, NumPy, OpenCV, Pandas, Python, SQL, Scikit-Learn, Seaborn, Построение Rest API, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Коваленко Никита Алексеевич,"Python, NumPy, Pandas, PyTorch, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Григорьев Владимир Дмитриевич,"Python, Git","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Семёнкин Виктор Глебович,"Data Engineering, OpenCV, Git, NumPy, Pandas, Matplotlib, Python, Machine Learning, Математическая статистика, Разработка моделей данных, Scikit-Learn, Seaborn, Computer Vision","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
37,Разработка веб-приложения для мониторинга и анализа работы виртуальных машин с использованием искусственного интеллекта,"Веб-приложение, которое будет проводить мониторинг и анализировать работу виртуальных машин. Искусственный интеллект будет использоваться для обнаружения аномалий, предсказания возможных проблем и рекомендаций по улучшению производительности.",Финаков Даниил Юрьевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Scikit-Learn', 'Matplotlib', 'Python', 'Figma', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Next', 'Git', 'Hadoop', 'Tailwind', 'Canva', 'AirFlow', 'Shadcn', 'TensorFlow', 'Grafana', 'Kubernetes', 'MUI', 'Machine Learning', 'S3', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Меньшин Тимур Наильевич,Linux,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Домникова Екатерина Артемовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Подосенова Анна Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Грошев Сергей Николаевич,"Linux, Управление проектами, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Варламова Диана Алексеевна,"Python, Linux, NumPy, Pandas, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Абрамов Владислав Дмитриевич,"Python, Git, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Ли Алексей Ильич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Прокудина Анна Константиновна,"СУБД PostgreSQL, SQL, Python, Computer Vision, HTML, OpenCV, NumPy, Matplotlib","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
86,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Бученков Владимир Владимирович,"Back-end разработка, Docker, Go, Kotlin, Linux, NumPy, Pandas, PyTorch, СУБД PostgreSQL, Умение работать с API, Построение Rest API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Бардин Константин Евгеньевич,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Макарова Елизавета Павловна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Степаненко Арсений Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Шенгелия Давид Давидович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Джалилова Диана Айдеровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Русанов Иван Владимирович,"Figma, HTML, Управление проектами, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Вальдман Игорь Петрович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Артюхова Полина Денисовна,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Агафонов Артем Михайлович,"Figma, HTML, CSS","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
27,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Мирошниченко Александр Васильевич,"Figma, Canva","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Мешина Октавиан Сергеевич,Управление проектами,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Бабаев Антон Александрович,Управление проектами,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Макаров Владимир Александрович,"Python, Figma","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Нагулина Виктория Андреевна,"HTML, Управление проектами","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Лесницкая Анастасия Александровна,"Figma, Canva, Управление проектами","['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Ровенская Полина Борисовна,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Бибишева Диана Руслановна,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Савина Кристина Дмитриевна,Figma,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Лазарева Полина Ивановна,,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
142,Технология создания консистентных изображений мультипликационных персонажей для генеративного ИИ,"С помощью одного запроса генерируем Character Sheet с различными позами одного и того же персонажа, далее на этих изображениях дообучаем генеративую модель с помощью DreamBooth. 
В качестве примера создаём комикс для абитуриентов МАИ.
https://twitter.com/rodrigon/status/1744923374399160686",Швецов Никита Андреевич,Управление проектами,"['DevOps', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Минаков Евгений Александрович,"Git, Figma, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Белова Софья Андреевна,"Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Иванов Дмитрий Евгеньевич,"Linux, Python, Математическая статистика, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Сергеев Георгий Олегович,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Аверьянов Александр Валерьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Крымов Артём Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Сабирова Ульяна Сергеевна,"Django, Figma, Git, HTML, Python, SQL, СУБД PostgreSQL, CSS","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Аристов Никита Леонидович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Николаев Владислав Иванович,"React, CSS, Figma, HTML, Git, Построение Rest API, Разработка моделей данных","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Семенова Ульяна Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
116,Система автоматического анализа электронного документа (PDF),"Требования: для анализа входящих неформазиованных электронных документов необходимо разработать систему анализа документа на основе:
1. Наличия печати
2. Наличия подписи в документе
3. Наличия признака договора
4. Наличия признака других стандартных документов (счет, накладная и т.п.)
",Жарков Александр Алексеевич,"Linux, Go, Git, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Титкова Ольга Алексеевна,"Back-end разработка, Docker, Data Science, Computer Vision, Go, Git, Linux, Machine Learning, Jupyter, OpenCV, NumPy, Pandas, PyTorch, Python, SQL, Математическая статистика, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Яковлева Анастасия Игоревна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Коломытцева Екатерина Андреевна,"Canva, Data Science, Git, Jupyter, Linux, Machine Learning, Matplotlib, OpenCV, NumPy, Pandas, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Корнилова Виктория Алексеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Леонов Илья Денисович,"Back-end разработка, Django, Docker, Git, Go, Linux, NumPy, Pandas, Python, Построение Rest API, Умение работать с API, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Иванов Кирилл Александрович,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Браун Александр антони,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Янышкин Максим Дмитриевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Паренькова Анастасия Евгеньевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
151,Применение сверточных нейронных сетей для сегментации сосудов при наличии стеноза с использованием данных рентгеновской коронарографии,"Этот проект фокусируется на использовании сверточных нейронных сетей (СНС) для анализа изображений, полученных методом рентгеновской коронарографии. Цель проекта — автоматизировать процесс сегментации коронарных сосудов для обнаружения стенозов, что является ключевым для диагностики и лечения сердечно-сосудистых заболеваний. СНС способны обучаться на большом объеме данных, выявляя сложные паттерны и особенности, что делает их идеальными для задач сегментации изображений, особенно в медицинской сфере, где точность критически важна.",Кулемин Евгений Вадимович,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
44,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Чеснакова Дарья Александровна,Figma,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
44,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Линник Евгения Александровна,Figma,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
44,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Дубровин Иван Григорьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
44,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Симатов Никита Сергеевич,"Jupyter, Python, Matplotlib","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
44,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Щегалькин Егор Дмитриевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
44,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Гурин Кирилл Александрович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
44,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Беляков Сергей Андреевич,Git,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
44,Использование искусственного интеллекта для прогнозирования требований к виртуальным машинам на основе исторических данных,"В этой работе студенты будут использовать искусственный интеллект для прогнозирования будущих потребностей в виртуальных машинах на основе анализа исторических данных. Они будут разрабатывать модель машинного обучения, которое позволит компании быть готовой к изменениям в использование ресурсов и оптимизировать их использование.",Кудрявцева Ольга Олеговна,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Сабитов Данир Харисович,"NumPy, Python, OpenCV, PyTorch, Git, Docker, Linux, TensorFlow, Matplotlib, Jupyter, Machine Learning","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Копьев Иван Владимирович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Киперь Кристин Святославович,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Овчинников Михаил Евгеньевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Бурлаков Дмитрий Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Москаленко Александр Владиславович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Павленко Аркадий Анатольевич,Git,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Жильцова Елизавета Николаевна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Соболев Виктор Викторович,"Управление проектами, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
127,Разработка автоматизированной системы распознавания образов и ориентации подвижной платформы на цель,"Идея: сделать турель, защищающую область подоконника или кухонного стола от котов, обнаруживая их машинным зрением и отстреливая из водного пистолета. ",Спирин Игорь Сергеевич,"Computer Vision, Data Engineering, Data Science, Git, Jupyter, Linux, Matplotlib, NumPy, Pandas, Python, Умение работать с API, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Крупчинский Иван Владиславович,"Jupyter, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Ворохобин Алексей Андреевич,"Jupyter, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Ремизов Алексей Александрович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Моторин Максим Андреевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Паршина Арина Максимовна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Петунц Давид Андраникович,"Canva, Figma, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Малышкин Владимир Михайлович,"HTML, Python, Git, Matplotlib","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Карх Юлия Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Раннев Алексей Максимович,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
70,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Попов Павел Алексеевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Тюкова Ирина Игоревна,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Котов Денис Алексеевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Максудов Ренат Рустамович,"Data Science, Deep Learning, DevOps, NumPy, Pandas, Matplotlib, Keras, Canva, Computer Vision, Data Engineering, Git, Kafka, OpenCV, Scikit-Learn, TensorFlow, Seaborn, Python, Управление проектами, Разработка моделей данных, Machine Learning, Linux","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Коротков Александр Сергеевич,"Управление проектами, Python, HTML, CSS, Linux, SQL, Умение работать с API, Data Science","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Салтанов Денис Валерьевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Гитис Александра Игоревна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Гусак Варвара Андреевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Ившина Лидия Романовна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
49,Программно-аппаратный комплекс слежения за динамическим объектом,"Система слежения структурно представляет из себя камеру, закрепленную на приводной системе, управляемой в двух каналах. Изображение с камеры выводится на монитор, на котором оператор выделяет область, в которой находится целевой объект. С помощью алгоритмов машинного зрения определяются границы объекта в выделенной области. Далее при перемещении объекта в кадре на приводную систему выдаются сигналы управления, полученные исходя из информации об изменении координат пикселей, относящихся к объекту, находящемуся в кадре. Таким образом происходит визуальное сопровождение выбранного оператором объекта.",Потупчик Демьян Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Епимахова Аполлинария Андреевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Гаврина Дарья Михайловна,Управление проектами,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Нуйя Екатерина Романовна,"Figma, Python, Управление проектами, Computer Vision, Jupyter, Canva","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Герасимова Полина Юрьевна,Python,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Подлепенец Ксения Сергеевна,"Canva, Figma, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Шумеева Дарья Сергеевна,"Canva, Управление проектами, Figma","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Филиппов Кирилл Евгеньевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Козыренова Анастасия Андреевна,Figma,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
130,Рекламная кампания по продвижению,"Разработать маркетинговый спецпроект с системой персональных рекомендаций по составлению гардероба для привлечения женской аудитории на Озон 

🔹Провести исследование рынка и проанализировать конкурентов 

Задачу можно решить разными способами:

✅сделать чат-бот

✅внедрить механику в сайт (а это значит , придумать свой алгоритм)

✅или вообще сделать консультацию с блогером 

И как результат: предоставить прототип своего решения (в фигме/тильде/собрать сайт/сделать чат бот ). 
",Привознова Юлия Константиновна,"Canva, Figma, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Ахмедова Хуршида Мухаммад-аюбхон кизи,"СУБД PostgreSQL, SQL, Python, NumPy, Matplotlib, Jupyter, HTML, CSS","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Шведчиков Александр Олегович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Белокопытов Тимофей Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Чаплинская Олеся Сергеевна,"CSS, Django, Figma, HTML, Python, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Каледа Анастасия Алексеевна,"Django, HTML, Matplotlib, NumPy, Pandas, Python, SQL","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Кульчинский Герман Владимирович,"CSS, HTML, Git, React","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Наумов Руслан Сергеевич,"Python, СУБД PostgreSQL, Умение работать с API, Построение Rest API, SQL, Git, Go, Docker, Django, Back-end разработка, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Удалов Михаил Дмитриевич,"React, Python, Go, HTML","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Буянов Данила Дмитриевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Зморка Ильяс Юсуфович,"HTML, Django, Data Science, Computer Vision, Matplotlib, Jupyter, Data Engineering, OpenCV, Machine Learning, Keras, Pandas, NumPy, PyTorch, Scikit-Learn, Seaborn, Python, SQL, Deep Learning, CSS, Figma, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
132,Мультимодальный поиск по изображениям,"Проект ""Мультимодальный поиск по изображениям"" основан на использовании Milvus, открытой базы данных векторов, для создания поисковой системы, которая позволяет находить изображения по текстовым запросам. Процесс включает извлечение признаков изображений с помощью модели CLIP, преобразование их в векторы и сохранение в базе данных Milvus. При поступлении текстового запроса от пользователя, запрос также конвертируется в вектор с использованием модели CLIP, после чего выполняется поиск по векторному сходству для нахождения наиболее подходящих изображений.

Примерный User-Flow:
Ввод запроса: Пользователь вводит текстовый запрос, например, описание объекта или сцены.
Обработка запроса: Система преобразует текст запроса в вектор признаков с помощью модели CLIP.
Поиск: Производится поиск по базе данных Milvus для нахождения наиболее похожих векторов изображений.
Вывод результатов: Пользователю представляются изображения, наиболее соответствующие его запросу.

Этот проект представляет собой инновационное решение в области поиска информации, позволяя пользователям находить визуальный контент по текстовым описаниям, что делает поиск более интуитивно понятным и эффективным. Для более подробного ознакомления с проектом и технологиями, используемыми в нем, вы можете посетить официальный сайт Milvus​​.",Козьма Андрей Александрович,"Django, Git, Go, Docker, Linux, NumPy, Pandas, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
13,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",Кузнецов Дмитрий Константинович,Linux,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
13,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",Родькина Дарья Николаевна,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
13,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",Котлинская Анна Анатольевна,Управление проектами,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
13,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",Зенин Владимир Андреевич,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
13,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",Соломатин Данил Анатольевич,"Matplotlib, Математическая статистика, Machine Learning","['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
13,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",Дьякова Ксения Алексеевна,"Canva, HTML, Python, SQL","['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
13,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",Белуш Максим Валерьевич,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
13,Разработка программного обеспечения для проектирования космического солнечного зонда,"Цель: 
Разработка программного обеспечения для проектирования космического солнечного зонда
Задачи: 
  Создание и распределение ролей в команде
Выбор методики проектирования космического солнечного зонда
Выбор языка программирования
Разбиение аппарата на системы, которые необходимо будет рассчитывать
Определение входных и выходных параметров для каждой из систем
Создание программного обеспечения на основе расчетного файла с формулами
Результат:
Программное обеспечение, позволяющее спроектировать космический аппарат",Буренкова Айнур Рашадовна,"Figma, Canva, Управление проектами","['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Spring Boot', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'PostgreSQL', 'Python', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Java', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Построение Rest API', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Нагайцев Роман Максимович,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Беляева Дарья Евгеньевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Контарев Федор Андреевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Чапыгин Дмитрий Анатольевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Пронькина Ирина Валерьевна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Сулейманов Рашид Керимович,"Computer Vision, Python","['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Берников Никита Евгеньевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Русских Леонид Юрьевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
122,Загрязнение Каспия,"Изучение нефтяного загрязнения Каспия в результате добычи и транспортировки углеводородов по данным ДЗЗ.
",Шмакова Дарья Игоревна,,"['UI/UX', 'Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Photoshop', 'Scikit-Learn', 'Matplotlib', 'Python', 'PostgreSQL', 'Deep Learning', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'JavaScript']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Антипин Иван Александрович,"Back-end разработка, СУБД PostgreSQL, Умение работать с API, SQL, Python","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Климовец Вячеслав Александрович,"Back-end разработка, React, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Крючков Артемий Владимирович,"CSS, Figma, Git, HTML, Linux, Python, React, SQL, СУБД PostgreSQL, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Фадеев Денис Вадимович,"Back-end разработка, Docker, Git, SQL, СУБД PostgreSQL, Kotlin","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Меркулов Фёдор Алексеевич,"Figma, Git, Linux, SQL, Математическая статистика, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Корсаков Егор Александрович,"Back-end разработка, Git, Django, HTML, React, NumPy, Pandas, СУБД PostgreSQL, Математическая статистика, Python, CSS, Построение Rest API, SQL, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Желанов Даниил Вячеславович,"Figma, Git, HTML","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Лютоев Илья Александрович,"Back-end разработка, Docker, Git, Linux, Matplotlib, NumPy, Pandas, Python, SQL, Построение Rest API, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
32,Применение нейронных сетей для балансировки нагрузки в веб-серверах (Nginx),"На данный момент современные веб и обратные прокси-серверы по типу Ngixn, Haproxy, Apach в том числе и продукт Сбертеха SynGX используют алгоритмы балансировки нагрузки round-robin, Least Connection, ip-hash для управления трафиков, что не является пределом эффективности для высоконагруженных систем. 
В рамках данной задачи предлагается разработать модель веб-сервера с применение нейронных сетей в качестве 'распределителя' сетевого трафика, что позволит увеличить производительность и сделает данный веб-сервер уникальным продуктом на современном рынке.",Павлов Иван Дмитриевич,"Back-end разработка, CSS, Docker, Git, DevOps, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API, Управление проектами","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
131,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Сайгина Дарья Викторовна,Управление проектами,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
131,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Борейко Кристина Денисовна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
131,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Борисов Андрей Васильевич,Computer Vision,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
131,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Громова Мария Алексеевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
131,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Кирьянова Анастасия Андреевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
131,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Волчков Станислав Андреевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
131,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Осокин Вячеслав Евгеньевич,Figma,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
131,Формирование чат бота с искусственным интеллектом для помощи в работе HR-менеджера,"Цель: создание чат-бота с поддержкой искусственного интеллекта для автоматизации работы 

Задачи:  
• создание чат бота с помощью блок схемы 
• приписывание вопросов и ответов чат-бота 
• подключение искусственного интеллекта к блок схеме",Зубарев Алексей Александрович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Хугаев Давид Маратович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Печенин Дмитрий Алексеевич,HTML,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Дубышкин Андрей Дмитриевич,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Павликов Павел Витальевич,"Математическая статистика, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Капцов Руслан Риннатович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Рекун Алексей Олегович,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Барышникова Екатерина Денисовна,"Математическая статистика, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Баталов Вячеслав Витальевич,"CSS, ETL, Figma, Data Science, Deep Learning, Data Engineering, Canva, Computer Vision, HTML, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
138,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Караваева Юлия Вадимовна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Шелаев Серафим Ильич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Бражкин Никита Сергеевич,"Back-end разработка, Git, HTML, Linux, Matplotlib, NumPy, OpenCV, Python, SQL, Построение Rest API, СУБД PostgreSQL, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Жбанов Данила Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Снегирёв Дмитрий Андреевич,CSS,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Логвинов Архип Николаевич,Управление проектами,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Калинин Максим Викторович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Габдулхаков Алмаз Вадимович,"Back-end разработка, Deep Learning, Django, Git, Jupyter, Machine Learning, Matplotlib, NumPy, Pandas, PyTorch, Python, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Чернаткин Алексей Сергеевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Жиденко Александр Сергеевич,"NumPy, Git, CSS, Figma, Linux, Python, Математическая статистика, Умение работать с API, SQL, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
88,Разработка системы ECM для авиационного двигателя,"Имеется техническая документация по авиационным двигателям различных производителей. Данные системы ECM - engine condition monitoring - параметры двигателя на входе и параметры, важные для технического обслуживания (индекс ""здоровья"" двигателя, запасы по температуре и др.). Так как зарубежные производители отключили нас от систем ECM, то компания S7 Techlab разработала собственную систему. В данном проекте вам нужно будет смоделировать авиационный двигатель на основе дифференциальных уравнений, а также обучить алгоритмы машинного обучения для прогнозирования параметров двигателей различных производителей. На основе обученных моделей необходимо выявить закономерности между входными и выходными параметрами.
У вас будет уникальная возможность поработать с реальными данными с гражданских самолетов, а по итогам работы получить решение востребованное у отечественных авиакомпаний. На сегодняшний день компания S7 единственная обладает технической базой и всеми необходимыми данными для поддержки систем ECM в отечественной авиации.",Сухов Владислав Андреевич,"Python, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
147,Ледовая разведка в Карском море,Мониторинг ледников и ледовая разведка в Карском море и методами машинного обучения по данным ДЗЗ.,Шарапов Данияр Азатович,"Data Engineering, Jupyter, Linux, Matplotlib, NumPy, Pandas, Python, Управление проектами, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
147,Ледовая разведка в Карском море,Мониторинг ледников и ледовая разведка в Карском море и методами машинного обучения по данным ДЗЗ.,Харитонов Алексей Владиславович,"Django, Python, Canva","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
147,Ледовая разведка в Карском море,Мониторинг ледников и ледовая разведка в Карском море и методами машинного обучения по данным ДЗЗ.,Сродных Никита Станиславович,"Django, Git, Jupyter, HTML, Linux, Python, SQL, СУБД PostgreSQL","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
147,Ледовая разведка в Карском море,Мониторинг ледников и ледовая разведка в Карском море и методами машинного обучения по данным ДЗЗ.,Купраш Александр Дмитриевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
147,Ледовая разведка в Карском море,Мониторинг ледников и ледовая разведка в Карском море и методами машинного обучения по данным ДЗЗ.,Белоусов Алексей Максимович,"Docker, Умение работать с API, СУБД PostgreSQL, Построение Rest API, SQL, Python, Git, Django","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
147,Ледовая разведка в Карском море,Мониторинг ледников и ледовая разведка в Карском море и методами машинного обучения по данным ДЗЗ.,Крушняк Серафим Романович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
147,Ледовая разведка в Карском море,Мониторинг ледников и ледовая разведка в Карском море и методами машинного обучения по данным ДЗЗ.,Ерохин Никита Сергеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
147,Ледовая разведка в Карском море,Мониторинг ледников и ледовая разведка в Карском море и методами машинного обучения по данным ДЗЗ.,Золоев Артур Валерьевич,"Back-end разработка, CSS, Data Science, Docker, Git, HTML, Linux, NumPy, Matplotlib, Pandas, React, SQL, Python, TensorFlow, Построение Rest API, СУБД PostgreSQL, Умение работать с API","['Linux', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'ONNX Runtime', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Ермачкова Елизавета Дмитриевна,Figma,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Николаева Нина Андреевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Евграфов Сергей Александрович,"Git, React, HTML, CSS","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Герасимов Максим Дмитриевич,"Управление проектами, Умение работать с API, Математическая статистика, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Пивунов Никита Вячеславович,"React, Git, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Харунжин Максим Алексеевич,"Python, NumPy, Git, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Григорьев Михаил Антонович,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Митрофанова Дарья Анатольевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Мишаков Павел Вячеславович,"Back-end разработка, CSS, Django, HTML, Git, NumPy, Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
149,Идентификация дефектов печатных плат методами машинного обучения,Идентификация дефектов печатных плат (PCB) методами машинного обучения для небольшого производства в МАИ,Цапко Нелли Александровна,Математическая статистика,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Насыров Максим Раилевич,"Data Engineering, Django, Docker, Git, Jupyter, Linux, Kubernetes, NumPy, Pandas, Python, Разработка моделей данных, СУБД PostgreSQL, Умение работать с API, Управление проектами, SQL, Построение Rest API, HTML, Kafka, Back-end разработка","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Парфёнова Екатерина Игоревна,"Управление проектами, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Осипов Алексей Александрович,"Canva, Data Engineering, DevOps, ETL, HTML, Jupyter, Kotlin, Machine Learning","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Горьков Артём Алексеевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Шпихернюк Алиса Александровна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Шадрина Екатерина Романовна,"Figma, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Кобылинский Александр Юрьевич,"CSS, Deep Learning, Django, Data Science, Git, Figma, HTML, Jupyter, Keras, Machine Learning, Matplotlib, Pandas, Python, TensorFlow, Scikit-Learn, React, Математическая статистика, Data Engineering","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Щедров Андрей Дмитриевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Бобылев Артем Алексеевич,"Jupyter, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
36,Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа,"Проект ""Выявление значимых общественно-политических и экономических событий на курсовую стоимость валюты на основе семантического анализа"" направлен на изучение взаимосвязи между ключевыми событиями и колебаниями валютных курсов через применение машинного обучения.

Основная цель проекта - повышение точности прогнозирования динамики валютных курсов на основе текущих новостей, что позволит принимать более обоснованные финансовые решения. Проект включает в себя сбор и предобработку данных, классификацию новостей, анализ их значимости и визуализацию результатов через веб-интерфейс.

Проект ставит перед собой задачу не только технического анализа данных, но и практического применения полученных знаний для улучшения финансовых стратегий на основе актуальной общественно-политической и экономической ситуации.",Клёнин Даниил Владимирович,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'CDN', 'JavaScript', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning', 'Helm']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Слободянюк Андрей Дмитриевич,"Python, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Соломеин Иван Игоревич,"Canva, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Рыжов Егор Андреевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Вуколов Дениз Афганович,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Соловьева Юлия Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Абышева Екатерина Анатольевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Чернявская Екатерина Юрьевна,"Python, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Аразов Егор Рафаэлевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Орлова Анна Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
150,Автоматический анализ мнений абитуриентов в соц.сетях на основе больших языковых моделей,Используем ChatGPT для извлечения из текстовой информации структурированных данных и на основе них рисуем инфографику / делаем выводы относительно настроений абитуриентов.,Емельянова Екатерина Владимировна,"Python, Figma, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Next', 'Git', 'Tailwind', 'Canva', 'Shadcn', 'TensorFlow', 'Kubernetes', 'MUI', 'Machine Learning', 'SSR', 'Data Science', 'Jupyter', 'CSS', 'Zustand', 'Pandas', 'Vue', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
42,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Ибрагимов Булат Ринатович,СУБД PostgreSQL,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
42,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Викулов Дмитрий Геннадьевич,,"['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
42,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Лейхнер Максим Дмитриевич,"Kotlin, Figma, Git, Разработка моделей данных, СУБД PostgreSQL, SQL","['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
42,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Плясунова Ксения Константиновна,"Canva, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
42,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Осипян Гурген Валерьевич,"CSS, Docker, Go, Git, HTML, Linux, NumPy, Python, SQL, СУБД PostgreSQL, Умение работать с API, Построение Rest API, Back-end разработка, React, Управление проектами","['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
42,Система учета потребностей в обучении для сотрудников в возрасте 50+,"Требования:
1. Разработать структуру БД для хранения данных о сотруднике, его компетенциях и сроках потребностей
2. Разработать интерфейс для ввода/редактирования и администрирования данных
",Ермилов Максим Андреевич,"Back-end разработка, Docker, Git, Linux, Построение Rest API, СУБД PostgreSQL, Умение работать с API","['UI/UX', 'Linux', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Бецукова Камилла Зураповна,Управление проектами,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Конова София Сергеевна,"Canva, Figma, Git","['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Тимофеев Максим Леонидович,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Скачков Никита Сергеевич,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Котлов Максим Алексеевич,"Matplotlib, NumPy, OpenCV, Умение работать с API","['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Гашимова Лала Сергеевна,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Шеин Данила Романович,"OpenCV, Machine Learning, AirFlow","['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Кирина Анжелика Денисовна,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
41,Разработка концепта экспертной системы по предполетному контролю авиационного боевого комплекса,"Целевая аудитория: Авиационные технические отряды в составе инженерно-авиационной службы воинских частей. 

Образ результата: Устройство, позволяющее в режиме видеонаблюдения фиксировать недочеты и неисправности авиационного боевого комплекса в процессе предполетной подготовки.

Цель проекта: Повысить эффективность предполетной подготовки авиационного боевого комплекса. Внедрение дополнительной степени защиты от невнимательности инженеров авиационных технических отрядов.",Бойцова Мария Эдуардовна,,"['ROS', 'Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Кадырова Ксения Дамировна,"CSS, Figma, Git, HTML, Python, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Николаева Елизавета Романовна,"Canva, Figma, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Раужев Юрий Михайлович,"Python, Git, СУБД PostgreSQL, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Иващенко Артём Валерьевич,"PyTorch, NumPy","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Богданов Даниил Алексеевич,"СУБД PostgreSQL, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Денисенко София Дмитриевна,"SQL, Управление проектами, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Аитова Алина Валерьевна,"HTML, Git, OpenCV, NumPy, SQL, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Плоцкий Богдан Андреевич,Git,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
68,Вырубка леса в Арханглеьске,Оценка объемов вырубки леса в Архангельской области с использованием данных ДЗЗ.,Нуриев Наиль Ниязович,"Keras, Jupyter, Kotlin, NumPy, Python, СУБД PostgreSQL, TensorFlow, Matplotlib, Linux, Git, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'NumPy', 'Deep Learning']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Калиниченко Артём Андреевич,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Чесноков Василий Дмитриевич,"CSS, Git, HTML","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Мазаев Василий Владимирович,"Jupyter, Data Science, Pandas, NumPy, Python, Seaborn, Математическая статистика","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Хаева Виктория Олеговна,"NumPy, Figma, Python","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Мирошников Дмитрий Евгеньевич,"Go, Git, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Формалёв Александр Сергеевич,Git,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Голубев Тимофей Дмитриевич,"Back-end разработка, Django, Linux, Python","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Железнов Илья Васильевич,"CSS, Figma, HTML, Linux, Git","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Бонокин Данил Сергеевич,"Back-end разработка, SQL, Python, Построение Rest API, Умение работать с API","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
19,Формирование БД для Postgresql на основе ER-модели,"Нужно будет провести исследование существующих инструментов ER моделирования баз данных. Результатом должно стать desktop приложение с графическим интерфейсом или без (c++/Qt либо PyQt), способное конструировать структуру БД на основе ER модели.",Рамалданов Рустамхан Ражудинович,"Back-end разработка, Умение работать с API, Построение Rest API, SQL, Python, CSS, Django, Git, HTML, Linux","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'HTML', 'SQL', 'React', 'Git', 'Tailwind', 'Canva', 'Atlassian stack [Jira, Confluence]', 'Kubernetes', 'Data Science', 'Jupyter', 'C++', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'JavaScript']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Романова Полина Николаевна,СУБД PostgreSQL,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Козина Мария Андреевна,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Севастьянова Екатерина Вадимовна,"Figma, Canva","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Земскова Екатерина Максимовна,"Canva, Data Science, Data Engineering, Deep Learning, Keras, Matplotlib, NumPy, Pandas, Python, SQL, Seaborn, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Фишер Александр Дмитриевич,"СУБД PostgreSQL, SQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Долженков Денис Викторович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Виноградова Ольга Геннадьевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Махвиеня Полина Алексеевна,"Canva, Figma","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Смолянов Иван Алексеевич,"Back-end разработка, CSS, Data Science, Deep Learning, Git, Go, HTML, Jupyter, Linux, Machine Learning, NumPy, Pandas, PyTorch, SQL, Scikit-Learn, Математическая статистика, СУБД PostgreSQL, Python","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
106,Ледовая разведка,Мониторинг ледников и ледовая разведка в Баренцевом море методами машинного обучения по данным ДЗЗ ,Андронаки Егор Дмитриевич,"HTML, Jupyter, Kotlin, Matplotlib, Python, SQL, СУБД PostgreSQL","['Linux', 'UI/UX', 'Умение работать с API', 'PyTorch', 'Back-end разработка', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Photoshop', 'Python', 'Figma', 'Docker', 'Data Engineering', 'Adobe XD', 'Computer Vision', 'HTML', 'Seaborn', 'ONNX Runtime', 'SQL', 'React', 'JavaScript', 'Git', 'Tailwind', 'Canva', 'TensorFlow', 'Kubernetes', 'Machine Learning', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning']"
82,"Расчет сбора, отведения и очистки поверхностного стока","**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Сервис


**Цель проекта:**
Автоматизация процессов расчета количественных и качественных характеристик поверхностного стока для проектирования систем водоотведения и очистки. 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор языка программирования 
3. определение входных и выходных параметров
4. создание программного обеспечения на основе расчетного файла с формулами


**Результат проекта:**
Программное обеспечение, позволяющее рассчитать объем поверхностных вод на основе заданных характеристик (количества водонепроницаемых поверхностей, климатической зоны и т.д), объем сооружений для очистки воды 
",Марченко Дмитрий Владимирович,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
82,"Расчет сбора, отведения и очистки поверхностного стока","**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Сервис


**Цель проекта:**
Автоматизация процессов расчета количественных и качественных характеристик поверхностного стока для проектирования систем водоотведения и очистки. 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор языка программирования 
3. определение входных и выходных параметров
4. создание программного обеспечения на основе расчетного файла с формулами


**Результат проекта:**
Программное обеспечение, позволяющее рассчитать объем поверхностных вод на основе заданных характеристик (количества водонепроницаемых поверхностей, климатической зоны и т.д), объем сооружений для очистки воды 
",Унжаков Владислав Родионович,Python,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
82,"Расчет сбора, отведения и очистки поверхностного стока","**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Сервис


**Цель проекта:**
Автоматизация процессов расчета количественных и качественных характеристик поверхностного стока для проектирования систем водоотведения и очистки. 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор языка программирования 
3. определение входных и выходных параметров
4. создание программного обеспечения на основе расчетного файла с формулами


**Результат проекта:**
Программное обеспечение, позволяющее рассчитать объем поверхностных вод на основе заданных характеристик (количества водонепроницаемых поверхностей, климатической зоны и т.д), объем сооружений для очистки воды 
",Жумагулова Сагида Елеусеновна,"Linux, HTML, Canva, Управление проектами","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
82,"Расчет сбора, отведения и очистки поверхностного стока","**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Сервис


**Цель проекта:**
Автоматизация процессов расчета количественных и качественных характеристик поверхностного стока для проектирования систем водоотведения и очистки. 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор языка программирования 
3. определение входных и выходных параметров
4. создание программного обеспечения на основе расчетного файла с формулами


**Результат проекта:**
Программное обеспечение, позволяющее рассчитать объем поверхностных вод на основе заданных характеристик (количества водонепроницаемых поверхностей, климатической зоны и т.д), объем сооружений для очистки воды 
",Парамонова Лидия Александровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
82,"Расчет сбора, отведения и очистки поверхностного стока","**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Сервис


**Цель проекта:**
Автоматизация процессов расчета количественных и качественных характеристик поверхностного стока для проектирования систем водоотведения и очистки. 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор языка программирования 
3. определение входных и выходных параметров
4. создание программного обеспечения на основе расчетного файла с формулами


**Результат проекта:**
Программное обеспечение, позволяющее рассчитать объем поверхностных вод на основе заданных характеристик (количества водонепроницаемых поверхностей, климатической зоны и т.д), объем сооружений для очистки воды 
",Шкарина Ксения Петровна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
82,"Расчет сбора, отведения и очистки поверхностного стока","**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Сервис


**Цель проекта:**
Автоматизация процессов расчета количественных и качественных характеристик поверхностного стока для проектирования систем водоотведения и очистки. 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор языка программирования 
3. определение входных и выходных параметров
4. создание программного обеспечения на основе расчетного файла с формулами


**Результат проекта:**
Программное обеспечение, позволяющее рассчитать объем поверхностных вод на основе заданных характеристик (количества водонепроницаемых поверхностей, климатической зоны и т.д), объем сооружений для очистки воды 
",Асанов Дмитрий Игоревич,"AirFlow, NumPy","['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
82,"Расчет сбора, отведения и очистки поверхностного стока","**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Сервис


**Цель проекта:**
Автоматизация процессов расчета количественных и качественных характеристик поверхностного стока для проектирования систем водоотведения и очистки. 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор языка программирования 
3. определение входных и выходных параметров
4. создание программного обеспечения на основе расчетного файла с формулами


**Результат проекта:**
Программное обеспечение, позволяющее рассчитать объем поверхностных вод на основе заданных характеристик (количества водонепроницаемых поверхностей, климатической зоны и т.д), объем сооружений для очистки воды 
",Вега Виктор Валерьевич,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
82,"Расчет сбора, отведения и очистки поверхностного стока","**Тип проекта (сервис, продукт, модель, алгоритм и т.п.):**
Сервис


**Цель проекта:**
Автоматизация процессов расчета количественных и качественных характеристик поверхностного стока для проектирования систем водоотведения и очистки. 


**Задачи проекта:**

1. создание и распределение ролей в команде
2. выбор языка программирования 
3. определение входных и выходных параметров
4. создание программного обеспечения на основе расчетного файла с формулами


**Результат проекта:**
Программное обеспечение, позволяющее рассчитать объем поверхностных вод на основе заданных характеристик (количества водонепроницаемых поверхностей, климатической зоны и т.д), объем сооружений для очистки воды 
",Тимохина Софья Сергеевна,,"['Linux', 'UI/UX', 'Умение работать с API', 'Automated testing', 'Back-end разработка', 'K8S', 'Photoshop', 'Python', 'PostgreSQL', 'Figma', 'Docker', 'Data Engineering', 'ELK', 'Adobe XD', 'HTML', 'SQL', 'React', 'CDN', 'Git', 'Tailwind', 'Hadoop', 'Canva', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'Grafana', 'Kubernetes', 'S3', 'Data Science', 'Jupyter', 'CSS', 'Pandas', 'Управление проектами', 'Nginx', 'Nexus', 'Математическая статистика', 'Разработка моделей данных', 'Django', 'Построение Rest API', 'СУБД PostgreSQL', 'JavaScript', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Севостьянов Александр Николаевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Фетисов Андрей Алексеевич,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Мозжухин Даниил Ринатович,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Кабанов Дмитрий Дмитриевич,"CSS, HTML, Математическая статистика","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Лебидко Марина Владимировна,"NumPy, Deep Learning, Keras, Matplotlib, Python, Machine Learning, TensorFlow","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Максименко Валерия Витальевна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Хучашев Альфред Даниялович,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Ткач Элеонора Александровна,,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Хохлова Анна Вадимовна,"HTML, Git","['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
110,Обработка текстовых данных на основы ИИ для выявления интернационализированных интернет идентификаторов и их преобразования в гиперссылки,"**Конечный пользователь:** Разработчики программного обеспечения

**Тип проекта:** Программная библиотека

**Задачи проекта:**

- [ ] Разработать алгоритм на основе машинного обучения, определяющий в массиве текстовой информации доменные имена, URL, адреса электронной почты, каналы мессенджеров, никнеймы, телефоны и т.д. и преобразующий их в гиперссылки. Предложить максимально полный набор идентификаторов для преобразования;
- [ ] Алгоритм должен учитывать языковое многообразие как самого текста, так и потенциальных гиперссылок;
- [ ] Алгоритм должен учитывать возможность опечаток при написании текста, например, склейку строк, опечатки, связанные с расположением символов в клавиатурных раскладках, популярные грамматические ошибки и т.д. 
- [ ] Постараться учесть максимальное число распространенных в тексте опечаток и ошибок.

**Результат проекта:**
Программная библиотека, позволяющая подавать на вход массивы текста и получать на выходе обработанный текст с гиперссылками.

**Ограничения и допущения:**
Обязательными для обработки являются наборы символов из таблиц Unicode для языковых скриптов латиницы и кириллицы. Дополнительные скрипты – по желанию.

**Необходимые ресурсы для выполнения проекта:**
Стандартный инструментарий разработчика ПО

**Пререквизиты проекта** (компетенции участников команды): Навыки разработчика ПО, программирования, умение выбрать подходящую среду разработки, навыки работы с созданием и обучением ML-алгоритмов.

**Дополнительная информация:**
https://поддерживаю.рф/участникам/документация/ 

**Пример** (входные данные + результат):

1. «Заявку просьба отправить на почту инфо@поддерживаю.рф» – в этом примере почтовый адрес инфо@поддерживаю.рф должен быть преобразован в гиперссылку;
2. «Я вас абсолютно поддерживаю.РФ великая держава» – в этом примере алгоритм должен определить, что произошла ошибка отсутствия пробела перед «РФ» не делать преобразования в гиперссылку;
3. «Поддерживаю. РФ – проект развития инфраструктуры кириллических доменов и почтовых адресов» – в этом примере алгоритм должен определить, что перед РФ появился ошибочный пробел, должен произвести склейку и преобразовать в гиперссылку;
4. «Мой телеграм канал, где множество info @podderzhivayu_rf» – в этом примере алгоритм должен определить, что гиперссылку нужно сделать на телеграм канал @podderzhivayu_rf, а не произвести склейку с info и сделать адрес электронной почты;
5. «Перейдите на сайт https://www.cctld.rus» – в этом примере алгоритм должен определить, что такого доменного имени не существует и не делать URL гиперссылкой. Однако для популярных доменных имен верхнего уровня децентрализованной доменной адресации можно создавать соответствующие среде их обработки в гиперссылки (пример .onion).
6. и т.д.",Сорокин Дмитрий Андреевич,Python,"['Linux', 'Умение работать с API', 'PyTorch', 'Automated testing', 'Back-end разработка', 'K8S', 'Keras', 'Matplotlib', 'Scikit-Learn', 'Python', 'PostgreSQL', 'Docker', 'ELK', 'Data Engineering', 'Computer Vision', 'Seaborn', 'SQL', 'CDN', 'Git', 'Hadoop', 'AirFlow', 'Atlassian stack [Jira, Confluence]', 'TensorFlow', 'Grafana', 'Kubernetes', 'Machine Learning', 'S3', 'Data Science', 'Jupyter', 'Pandas', 'Управление проектами', 'OpenCV', 'Nginx', 'Nexus', 'Построение Rest API', 'Django', 'СУБД PostgreSQL', 'Математическая статистика', 'Разработка моделей данных', 'NumPy', 'Deep Learning', 'Helm']"
